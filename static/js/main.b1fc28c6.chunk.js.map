{"version":3,"sources":["serviceWorkerRegistration.js","helpers/auth-helper.ts","pages/Home.tsx","config/config.ts","components/layout/Header.tsx","components/global/EmptyState.tsx","gql/module/index.ts","pages/module/Create.tsx","components/global/Loading.tsx","pages/module/Update.tsx","components/module/ModuleActionArea.tsx","components/module/DeleteModule.tsx","components/lesson/LessonActionArea.tsx","gql/lesson/index.ts","components/lesson/DeleteLesson.tsx","components/question/QuestionActionArea.tsx","gql/question/index.ts","components/question/DeleteQuestion.tsx","helpers/PreviewImage.tsx","components/question/PreviewQuestion.tsx","components/question/QuestionItem.tsx","components/lesson/LessonItem.tsx","components/module/ModuleItem.tsx","pages/module/Read.tsx","pages/module/List.tsx","pages/lesson/Create.tsx","pages/lesson/Read.tsx","pages/lesson/List.tsx","components/motion/fixed.ts","components/motion/utils.ts","components/motion/FixedSizeList.tsx","gql/note/index.ts","components/note/CreateNote.tsx","components/note/index.tsx","components/question/createQuestion/steps/QuestionText.tsx","components/question/createQuestion/steps/QuestionImage.tsx","components/question/createQuestion/steps/QuestionType.tsx","components/question/createQuestion/steps/QuestionAnswer.tsx","components/question/createQuestion/steps/QuestionDetails.tsx","components/question/createQuestion/steps/QuestionOptions.tsx","components/question/createQuestion/steps/QuestionReview.tsx","components/question/createQuestion/QuestionStepper.tsx","components/question/createQuestion/CreateQuestion.tsx","pages/question/Create.tsx","pages/question/Update.tsx","pages/question/Read.tsx","pages/question/List.tsx","gql/auth/index.ts","routing/routes.ts","pages/auth/Login.tsx","routing/MainRouter.tsx","theme.ts","App.tsx","index.tsx"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","auth","setUserDetails","user","cb","jwt","token","email","id","sessionStorage","setItem","JSON","stringify","unsetUserDetails","removeItem","isAuthenticated","getItem","obj","parse","withStyles","createStyles","root","maxWidth","margin","height","display","textAlign","alignItems","flexDirection","justifyContent","actions","classes","Card","className","CardContent","Typography","variant","CardActions","Button","color","component","Link","aria-label","to","Fragment","env","process","server_url","ga_id","REACT_APP_GOOGLE_ANALYTICS","Header","history","isAuthed","setIsAuthed","ReactGA","initialize","React","useState","message","setMessage","useEffect","listen","pageview","pathname","search","loading","setLoading","anchorEl","setAnchorEl","open","handleClose","AppBar","position","Toolbar","style","IconButton","aria-controls","aria-haspopup","onClick","event","currentTarget","AccountCircle","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","disabled","success","push","CircularProgress","size","Snackbar","autoHideDuration","spacing","wrapper","padding","icon","fontSize","header","iconContainer","undefined","action","actionLabel","elevation","CardHeader","title","endIcon","Replay","LIST","gql","READ","CREATE","UPDATE","DELETE","setTitle","level","setLevel","type","setType","titleError","setTitleError","serverError","setServerError","useMutation","addModule","submit","isValid","length","handleValidation","variables","input","res","e","toString","startIcon","ArrowBack","TextField","label","autoFocus","value","onChange","target","onKeyDown","key","helperText","InputProps","inputProps","min","max","parseInt","Check","progressWrapper","minHeight","params","useQuery","data","updateModule","mutationLoading","getModule","ModuleActionArea","link","children","CardActionArea","module","moduleError","setModuleError","deleteModule","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","Close","err","Delete","LessonActionArea","lesson","lessonError","setLessonError","deleteLesson","QuestionActionArea","LIST_QUESTION_TYPE","question","questionError","setQuestionError","deleteQuestion","useStyles","makeStyles","theme","preview","minWidth","backgroundSize","cardText","PreviewDocument","photo","setPreview","Fade","in","CardMedia","image","previewContainer","optionChip","background","borderRadius","fontWeight","doneButton","width","PreviewQuestion","items","text","sort","a","b","order","map","item","note","textDecoration","includes","options","option","Chip","palette","card","avatar","secondary","main","chipContainer","divider","fab","bottom","right","displayActions","delay","lessonId","openDeleteDialog","setOpenDeleteDialog","Zoom","transitionDelay","subheader","answerArr","answer","MoreVert","ListItemIcon","ListItemText","primary","ListItem","button","Help","fixedHeightCard","disableHeight","Date","createdAt","toDateString","questions","Fab","Add","lessons","Book","updatedAt","refetch","lessonMessage","setLessonMessage","addLesson","withRouter","newFetch","getModules","getLesson","getLessons","useFixedList","swapDistance","onPositionUpdate","onPositionChange","startIndex","handleDragStart","handleChange","useCallback","i","dragOffset","targetIndex","offset","Math","findIndex","handleDragEnd","endIndex","getDragStateZIndex","base","FixedSizeItem","index","itemProps","listItem","setState","onDragStart","onDragEnd","onAnimationComplete","onViewportBoxUpdate","_viewportBox","delta","y","translate","useFixedListItem","dragState","eventHandlers","zIndex","div","layout","initial","drag","whileHover","scale","boxShadow","whileTap","FixedSizeList","setItems","clone","moveArray","props","CreateNote","newNote","setNote","noteError","setNoteError","createNote","rows","placeholder","multiline","questionText","markdown","addNote","iconButton","NoteDialog","onSelect","hasNote","setCreateNote","searchQuery","setSearchQuery","openDialog","setOpenDialog","selectItem","filteredItems","getNotes","filter","toLowerCase","aria-describedby","inputContainer","marginLeft","flex","cursor","QuestionText","useQuestion","setQuestion","activeText","setActiveText","activeTextError","setActiveTextError","editIndex","setEditIndex","inputRef","createRef","syncQuestions","newQuestion","newItems","preventDefault","itemI","old","newItem","Paper","InputBase","Grow","Edit","Divider","orientation","FormHelperText","DragIndicator","current","focus","editItem","ListItemSecondaryAction","splice","uploadHelpText","QuestionImage","uploaded","setUploaded","setError","onFileUpload","files","file","getBase64Image","img","Promise","resolve","reject","reader","FileReader","onload","result","onerror","readAsDataURL","clearUpload","Clear","accept","name","htmlFor","PhotoCamera","QuestionType","questionTypeOptions","capitalize","str","split","charAt","toUpperCase","slice","join","FormControl","FormLabel","RadioGroup","defaultValue","replace","FormControlLabel","control","Radio","QuestionAnswer","CheckBoxOutlineBlank","checkedIcon","CheckBox","Autocomplete","multiple","getOptionLabel","disableCloseOnSelect","handleMultiChoiceChange","renderOption","selected","Checkbox","marginRight","checked","renderInput","handleTextChange","QuestionDetails","answerHint","gutterBottom","Slider","points","valueLabelDisplay","step","marks","QuestionOptions","edge","QuestionReview","handleReset","addQuestion","updateQuestion","requiresPiano","toLocaleLowerCase","steps","required","contentWrapper","buttonContainer","left","backButton","completed","instructions","marginTop","marginBottom","QuestionStepper","activeStep","setActiveStep","Set","setCompleted","errors","setErrors","skipped","setSkipped","questionSteps","totalSteps","isStepOptional","skippedSteps","completedSteps","allStepsCompleted","handleNext","newActiveStep","has","handleStep","isStepComplete","isStepError","Stepper","alternativeLabel","nonLinear","stepProps","buttonProps","optional","isStepSkipped","Step","StepButton","prevActiveStep","Error","prevSkipped","newSkipped","values","add","newCompleted","newErrors","every","initialQuestion","QuestionContext","createContext","_","useContext","CreateQuestion","update","getQuestionTypes","Provider","getQuestion","getQuestions","LOGIN","routes","setEmail","password","setPassword","emailError","setEmailError","passwordError","setPasswordError","login","passed","adminLogin","authed","CreateModule","ReadModule","UpdateModule","ListModule","CreateLesson","ReadLesson","ListLesson","ReadQuestion","UpdateQuestion","ListQuestion","MainRouter","useHistory","setAuth","bool","Grid","container","justify","xs","fallback","exact","path","Home","render","createMuiTheme","typography","fontFamily","h1","h2","h3","h4","h5","overrides","MuiTextField","MuiListItemText","responsiveFontSizes","App","client","ApolloClient","uri","credentials","cache","InMemoryCache","ReactDOM","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.b1fc28c6.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","/**\n * Authentication helper for the application\n */\nconst auth = {\n  /**\n   * Sets user details in session storage\n   * after successfully logging in\n   *\n   * @param {user} user\n   * @param {*} cb\n   */\n  setUserDetails(\n    user: { token: string; user: { email: string; id: string } },\n    cb: (bool: boolean) => void\n  ) {\n    const jwt = {\n      token: user.token,\n      user: {\n        email: user.user.email,\n        id: user.user.id,\n      },\n    };\n\n    sessionStorage.setItem(\"jwt\", JSON.stringify(jwt));\n    cb(true);\n  },\n  /**\n   * Removes user details from session storage\n   *\n   * @param {*} cb\n   */\n  unsetUserDetails(cb: (bool: boolean) => void) {\n    sessionStorage.removeItem(\"jwt\");\n    cb(true);\n  },\n  /**\n   * Check if the user is authenticated\n   *\n   * @returns a user object if the user is logged in, or false is not\n   */\n  isAuthenticated() {\n    if (typeof window == \"undefined\") return false;\n\n    if (sessionStorage.getItem(\"jwt\") !== null) {\n      //@ts-ignore\n      const obj = JSON.parse(sessionStorage.getItem(\"jwt\"));\n      return obj && obj.user ? obj : false;\n    }\n\n    return false;\n  },\n};\n\nexport default auth;\n","import {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  createStyles,\n  Typography,\n  withStyles,\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport React from \"react\";\nimport auth from \"./../helpers/auth-helper\";\n\nconst styles = () =>\n  createStyles({\n    root: {\n      maxWidth: \"800px\",\n      margin: \"0 auto\",\n      height: \"500px\",\n      display: \"flex\",\n      textAlign: \"center\",\n      alignItems: \"center\",\n      flexDirection: \"column\",\n      justifyContent: \"space-evenly\",\n    },\n    actions: {\n      justifyContent: \"center\",\n    },\n  });\n\ntype IProps = {\n  classes: {\n    root: string;\n    actions: string;\n  };\n};\n\nconst Home = ({ classes }: IProps) => {\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography variant=\"h1\">Welcome</Typography>\n        <br />\n        <Typography variant=\"body1\">Music Theory Admin Dashboard</Typography>\n      </CardContent>\n      <CardActions className={classes.actions}>\n        {auth.isAuthenticated() ? (\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            component={Link}\n            aria-label=\"Button\"\n            to=\"/modules\"\n          >\n            Modules\n          </Button>\n        ) : (\n          <React.Fragment>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              component={Link}\n              aria-label=\"Button\"\n              to=\"/login\"\n            >\n              Login\n            </Button>\n          </React.Fragment>\n        )}\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default withStyles(styles)(Home);\n","/**\n * Config types\n */\ntype IConfig = {\n  [key: string]: any;\n  env: string;\n  server_url: string;\n};\n\n/**\n * Load in environment variables from the .env and export them\n */\nexport const config: IConfig = {\n  env: process.env.NODE_ENV || \"development\",\n  server_url: process.env.REACT_APP_SERVER_URL || \"http://localhost:3000\",\n  ga_id: process.env.REACT_APP_GOOGLE_ANALYTICS,\n};\n","/**\n * Primary dependencies\n */\nimport React, { useEffect } from \"react\";\n\n/**\n * Component Library imports\n */\nimport {\n  AppBar,\n  CircularProgress,\n  IconButton,\n  Menu,\n  MenuItem,\n  Snackbar,\n  Toolbar,\n} from \"@material-ui/core\";\nimport { AccountCircle, Home } from \"@material-ui/icons\";\nimport { Link } from \"react-router-dom\";\nimport { config } from \"./../../config/config\";\n\nimport ReactGA from \"react-ga\";\nimport auth from \"./../../helpers/auth-helper\";\nimport { IHistoryProps } from \"../../types/router\";\n\n/**\n * Component Types\n */\ninterface IProps extends IHistoryProps {\n  isAuthed: boolean;\n  setIsAuthed: (bool: boolean) => void;\n}\n\n/**\n * Header for the application\n */\nconst Header = ({ history, isAuthed, setIsAuthed }: IProps) => {\n  /**\n   * Initialize Google Analytics\n   */\n  ReactGA.initialize(config.ga_id);\n\n  const [message, setMessage] = React.useState(\"\");\n\n  useEffect(() => {\n    /**\n     * Listen for changes in the router and send page views to Google Analytics\n     */\n    history.listen(() => {\n      ReactGA.pageview(window.location.pathname + window.location.search);\n    });\n  }, [history]);\n\n  /**\n   * Logout from the application\n   */\n  const submit = () => {\n    const jwt = auth.isAuthenticated();\n    if (jwt) {\n      setLoading(true);\n\n      auth.unsetUserDetails((success: boolean) => {\n        if (success) {\n          setIsAuthed(false);\n          setLoading(false);\n          handleClose();\n          setMessage(\"Logged out successfully\");\n\n          return history.push(\"/\");\n        }\n        setMessage(\"The system encountered an error, please try again later\");\n      });\n    } else {\n      setIsAuthed(false);\n      setMessage(\"The system encountered an error, please try again later\");\n    }\n  };\n\n  const [loading, setLoading] = React.useState(false);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleMenu = (event: any) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <React.Fragment>\n      <AppBar position=\"sticky\">\n        <Toolbar style={{ justifyContent: \"space-between\" }}>\n          <IconButton aria-label=\"Home\" component={Link} to=\"/\">\n            <Home />\n          </IconButton>\n\n          {isAuthed && (\n            <React.Fragment>\n              <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"right\",\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"right\",\n                }}\n                open={open}\n                onClose={handleClose}\n              >\n                <MenuItem disabled={loading} onClick={submit}>\n                  Logout {loading && <CircularProgress size={18} />}\n                </MenuItem>\n              </Menu>\n            </React.Fragment>\n          )}\n        </Toolbar>\n      </AppBar>\n\n      <Snackbar\n        open={message !== \"\"}\n        autoHideDuration={6000}\n        onClose={() => setMessage(\"\")}\n        message={message}\n      ></Snackbar>\n    </React.Fragment>\n  );\n};\n\nexport default Header;\n","/**\n * Primary dependencies\n */\nimport { Link } from \"react-router-dom\";\nimport {\n  Button,\n  withStyles,\n  createStyles,\n  Card,\n  CardHeader,\n  Theme,\n} from \"@material-ui/core\";\nimport { Replay, Error } from \"@material-ui/icons\";\n\n/**\n * Injected styles\n *\n * @param {int} spacing\n */\nconst styles = ({ spacing }: Theme) =>\n  createStyles({\n    wrapper: {\n      padding: spacing(4),\n      textAlign: \"center\",\n      maxWidth: \"800px\",\n      margin: \"0 auto\",\n    },\n    icon: {\n      fontSize: \"3em\",\n    },\n    header: {\n      display: \"flex\",\n      flexDirection: \"column-reverse\",\n      justifyContent: \"center\",\n    },\n    iconContainer: {\n      textAlign: \"center\",\n    },\n  });\n\n/**\n * Componenet Types\n */\ntype IProps = {\n  message?: string;\n  action?: () => void;\n  actionLabel?: string;\n  classes: {\n    wrapper: string;\n    icon: string;\n    header: string;\n    iconContainer: string;\n  };\n};\n\n/**\n * Renders an Error\n *  for the application\n */\nconst EmptyState = ({\n  message = undefined,\n  classes,\n  action = undefined,\n  actionLabel = \"Try Again\",\n}: IProps) => (\n  <Card elevation={3} className={classes.wrapper}>\n    <div className={classes.iconContainer}>\n      <Error color=\"error\" className={classes.icon} />\n    </div>\n    <CardHeader\n      title={message ? message : \"There was a problem\"}\n      className={classes.header}\n    />\n    {action ? (\n      <Button\n        className={classes.iconContainer}\n        variant=\"contained\"\n        color=\"secondary\"\n        endIcon={<Replay />}\n        onClick={action}\n      >\n        {actionLabel}\n      </Button>\n    ) : (\n      <Button component={Link} to=\"/\" color=\"primary\" variant=\"contained\">\n        Home\n      </Button>\n    )}\n  </Card>\n);\n\nexport default withStyles(styles)(EmptyState);\n","import { gql } from \"@apollo/client\";\n\n/**\n * Fetch a list of modules\n */\nexport const LIST = gql`\n  query getModules {\n    getModules {\n      id\n      title\n      level\n      createdAt\n      lessons {\n        id\n      }\n    }\n  }\n`;\n\n/**\n * Fetch a module by ID\n *\n * @param {id: String}\n */\nexport const READ = gql`\n  query getModule($id: String!) {\n    getModule(id: $id) {\n      id\n      title\n      level\n      type\n      createdAt\n      lessons {\n        id\n        createdAt\n        updatedAt\n      }\n    }\n  }\n`;\n\n/**\n * Create a new module\n *\n * @param {input: ModuleValidator}\n */\nexport const CREATE = gql`\n  mutation addModule($input: ModuleValidator!) {\n    addModule(input: $input) {\n      id\n    }\n  }\n`;\n\n/**\n * Update a module by ID\n *\n * @param {id: String!}\n * @param {input: ModuleValidator}\n */\nexport const UPDATE = gql`\n  mutation updateModule($id: String!, $input: ModuleValidator!) {\n    updateModule(id: $id, input: $input) {\n      id\n      title\n      level\n      type\n    }\n  }\n`;\n\n/**\n * Delete a module by ID\n *\n * @param {id: String!}\n * @returns {boolean}\n */\nexport const DELETE = gql`\n  mutation deleteModule($id: String!) {\n    deleteModule(id: $id)\n  }\n`;\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  Card,\n  TextField,\n  CardHeader,\n  CardContent,\n  createStyles,\n  withStyles,\n  CardActions,\n  CircularProgress,\n  Typography,\n  Theme,\n} from \"@material-ui/core\";\n\nimport { ArrowBack, Check } from \"@material-ui/icons\";\n\nimport { Link } from \"react-router-dom\";\n\nimport { useMutation } from \"@apollo/client\";\nimport { CREATE } from \"./../../gql/module\";\nimport { RouteComponentProps } from \"react-router-dom\";\n\n/**\n * Component types\n */\ninterface IProps extends RouteComponentProps {\n  match: any;\n  classes: { wrapper: string };\n}\n\n/**\n * Injected styles\n *\n * @param {int} spacing\n */\nconst styles = ({ spacing }: Theme) =>\n  createStyles({\n    wrapper: {\n      padding: spacing(4),\n    },\n  });\n\n/**\n * CreateModule Component\n *\n * @param {History} history - the browser history object\n * @param {Theme} classes - classes passed from Material UI Theme\n */\nconst Create = ({ history, classes }: IProps) => {\n  const [title, setTitle] = useState(\"\");\n  const [level, setLevel] = useState(0);\n  const [type, setType] = useState(\"THEORY\");\n\n  const [titleError, setTitleError] = useState(\"\");\n\n  const [serverError, setServerError] = useState(\"\");\n\n  /**\n   * Define the add Module mutation\n   */\n  const [addModule, { loading }] = useMutation(CREATE);\n\n  /**\n   * Handle validation for form inputs\n   */\n  const handleValidation = () => {\n    let isValid = false;\n    if (title.length < 3) {\n      setTitleError(\"Title must be at least 3 characters\");\n    } else {\n      isValid = true;\n      setTitleError(\"\");\n    }\n\n    return isValid;\n  };\n\n  /**\n   * Validate the inputted info, and if it passes run the mutation\n   */\n  const submit = () => {\n    if (handleValidation()) {\n      setServerError(\"\");\n\n      addModule({\n        variables: {\n          input: {\n            title,\n            level,\n            type,\n          },\n        },\n      })\n        .then((res: any) => {\n          history.push(`/modules/true`);\n        })\n        .catch((e) => {\n          setServerError(e.toString());\n        });\n    }\n  };\n\n  /**\n   * Render JSX\n   */\n  return (\n    <React.Fragment>\n      <Button component={Link} to=\"/\" startIcon={<ArrowBack />}>\n        Back\n      </Button>\n      <Card elevation={3} className={classes.wrapper}>\n        <CardHeader title=\"Create Module\" />\n\n        <CardContent>\n          <TextField\n            title=\"title\"\n            label=\"Title\"\n            autoFocus={true}\n            margin=\"normal\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            onKeyDown={(e) => e.key === \"Enter\" && submit()}\n            error={titleError !== \"\"}\n            helperText={titleError}\n          />\n\n          <TextField\n            title=\"level\"\n            label=\"Level\"\n            margin=\"normal\"\n            type=\"number\"\n            InputProps={{\n              inputProps: {\n                min: 0,\n                max: 12,\n              },\n            }}\n            value={level}\n            onChange={(e) => setLevel(parseInt(e.target.value))}\n            onKeyDown={(e) => e.key === \"Enter\" && submit()}\n          />\n\n          <TextField\n            title=\"type\"\n            label=\"Lesson Type\"\n            margin=\"normal\"\n            value={type}\n            onChange={(e) => setType(e.target.value)}\n            onKeyDown={(e) => e.key === \"Enter\" && submit()}\n          />\n\n          <Typography variant=\"caption\" color=\"error\">\n            {serverError}\n          </Typography>\n        </CardContent>\n        <CardActions>\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            onClick={submit}\n            disabled={loading}\n            endIcon={loading ? <CircularProgress size={18} /> : <Check />}\n          >\n            Save\n          </Button>\n        </CardActions>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(Create);\n","/**\n * Component Library imports\n */\nimport { CircularProgress, withStyles, createStyles } from \"@material-ui/core\";\n\n/**\n * Injected styles\n *\n */\nconst styles = () =>\n  createStyles({\n    progressWrapper: {\n      minHeight: \"-webkit-fill-available\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n  });\n\ntype IProps = {\n  classes: {\n    progressWrapper: string;\n  };\n};\n\n/**\n * Renders an Activity Indicator\n *  for the application\n */\nconst Loading = ({ classes }: IProps) => (\n  <div className={classes.progressWrapper}>\n    <CircularProgress />\n  </div>\n);\n\nexport default withStyles(styles)(Loading);\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  Card,\n  TextField,\n  CardHeader,\n  CardContent,\n  createStyles,\n  withStyles,\n  CardActions,\n  CircularProgress,\n  Typography,\n  Theme,\n} from \"@material-ui/core\";\n\nimport { ArrowBack, Check } from \"@material-ui/icons\";\n\nimport { Link } from \"react-router-dom\";\n\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { READ, UPDATE } from \"./../../gql/module\";\nimport Loading from \"./../../components/global/Loading\";\nimport EmptyState from \"./../../components/global/EmptyState\";\nimport { RouteComponentProps } from \"react-router-dom\";\n\n/**\n * Component types\n */\ninterface IProps extends RouteComponentProps {\n  match: any;\n  classes: any;\n}\n\n/**\n * Injected styles\n *\n * @param {int} spacing\n */\nconst styles = ({ spacing }: Theme) =>\n  createStyles({\n    wrapper: {\n      padding: spacing(4),\n    },\n  });\n\n/**\n * UpdateModule Component\n *\n * @param {History} history - the browser history object\n * @param {Theme} classes - classes passed from Material UI Theme\n */\nconst Update = ({ history, classes, match }: IProps) => {\n  const [title, setTitle] = useState(\"\");\n  const [level, setLevel] = useState(0);\n  const [type, setType] = useState(\"\");\n\n  const [titleError, setTitleError] = useState(\"\");\n\n  const [serverError, setServerError] = useState(\"\");\n\n  const { id } = match.params;\n\n  /**\n   * Fetch the current module and define\n   * the Update Module mutation\n   */\n  const { loading, error, data } = useQuery(READ, { variables: { id } });\n  const [updateModule, { loading: mutationLoading }] = useMutation(UPDATE);\n\n  /**\n   * Handle validation for form inputs\n   */\n  const handleValidation = () => {\n    let isValid = false;\n    if (title.length < 3) {\n      setTitleError(\"Title must be at least 3 characters\");\n    } else {\n      isValid = true;\n      setTitleError(\"\");\n    }\n\n    return isValid;\n  };\n\n  /**\n   * Validate the inputted info, and if it passes run the mutation\n   */\n  const submit = () => {\n    if (handleValidation()) {\n      setServerError(\"\");\n\n      updateModule({\n        variables: {\n          id,\n          input: {\n            title,\n            level,\n            type,\n          },\n        },\n      })\n        .then((res: any) => {\n          history.push(`/module/${res.data.updateModule.id}`);\n        })\n        .catch((e) => {\n          console.log(\"error\", e);\n          setServerError(e.toString());\n        });\n    }\n  };\n\n  useEffect(() => {\n    /**\n     * If the module exists, set it in the state\n     */\n    if (data && data.getModule) {\n      setTitle(data.getModule.title);\n      setLevel(data.getModule.level);\n      setType(data.getModule.type);\n    }\n  }, [data]);\n\n  /**\n   * Render JSX\n   */\n  if (loading) return <Loading />;\n  if (error) return <EmptyState message={error.message} />;\n  return (\n    <React.Fragment>\n      <Button component={Link} to=\"/\" startIcon={<ArrowBack />}>\n        Back\n      </Button>\n      <Card elevation={3} className={classes.wrapper}>\n        <CardHeader title=\"Edit Module\" />\n\n        <CardContent>\n          <TextField\n            title=\"title\"\n            label=\"Title\"\n            autoFocus={true}\n            margin=\"normal\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            onKeyDown={(e) => e.key === \"Enter\" && submit()}\n            error={titleError !== \"\"}\n            helperText={titleError}\n          />\n\n          <TextField\n            title=\"level\"\n            label=\"Level\"\n            margin=\"normal\"\n            type=\"number\"\n            InputProps={{\n              inputProps: {\n                min: 0,\n                max: 12,\n              },\n            }}\n            value={level}\n            onChange={(e) => setLevel(parseInt(e.target.value))}\n            onKeyDown={(e) => e.key === \"Enter\" && submit()}\n          />\n\n          <TextField\n            title=\"type\"\n            label=\"Lesson Type\"\n            margin=\"normal\"\n            value={type}\n            onChange={(e) => setType(e.target.value)}\n            onKeyDown={(e) => e.key === \"Enter\" && submit()}\n          />\n\n          <Typography variant=\"caption\" color=\"error\">\n            {serverError}\n          </Typography>\n        </CardContent>\n        <CardActions>\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            onClick={submit}\n            disabled={loading || mutationLoading}\n            endIcon={\n              loading || mutationLoading ? (\n                <CircularProgress size={18} />\n              ) : (\n                <Check />\n              )\n            }\n          >\n            Save\n          </Button>\n        </CardActions>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(Update);\n","import { CardActionArea } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\n\n/**\n * Component Types\n */\ntype IProps = {\n  link: string | null;\n  children: any;\n};\n\n/**\n * Conditionally displays an action area to be\n * clicked if there is a link present\n *\n * This component was created because an <a> tag\n * cannot be nested within another <a> tag\n *\n * Therefore on the module detail page an <a> tag isnt rendered,\n * so the chips can be rendered\n *\n * @param {string} link - an optional link\n * @param {*} children - The children\n */\nconst ModuleActionArea = ({ link = null, children }: IProps) => {\n  if (link)\n    return (\n      <CardActionArea component={Link} to={link}>\n        {children}\n      </CardActionArea>\n    );\n\n  return <div>{children}</div>;\n};\n\nexport default ModuleActionArea;\n","import React from \"react\";\n\nimport {\n  withStyles,\n  createStyles,\n  Button,\n  CircularProgress,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  DialogContentText,\n  Snackbar,\n  Theme,\n} from \"@material-ui/core\";\n\nimport { Close, Delete } from \"@material-ui/icons\";\nimport { DELETE } from \"./../../gql/module\";\nimport { useMutation } from \"@apollo/client\";\nimport { IHistoryProps } from \"../../types/router\";\n\n/**\n * Injected styles\n *\n * @param {int} spacing\n */\nconst styles = ({ spacing }: Theme) =>\n  createStyles({\n    root: {\n      padding: spacing(1),\n      margin: `${spacing(2)}px 0`,\n    },\n    actions: {\n      justifyContent: \"flex-end\",\n    },\n  });\n\n/**\n * Component Types\n */\ninterface IProps extends IHistoryProps {\n  open: boolean;\n  module: any;\n  handleClose: (open: boolean) => void;\n}\n\n/**\n * DeleteModule Component\n *\n * @param {History} history - the browser history object\n * @param {bool} open - whether the dialog should be open or not\n * @param {*} module - The module to be deleted\n * @param {*} handleClose - The function to run to close the dialog\n */\nconst DeleteModule = ({ history, open, module, handleClose }: IProps) => {\n  const [moduleError, setModuleError] = React.useState(\"\");\n\n  const [deleteModule, { loading }] = useMutation(DELETE);\n\n  /**\n   * Check validation and then run the\n   * module update network request\n   *\n   * On success,redirect to the home page\n   */\n  const submit = () => {\n    const { id } = module;\n\n    deleteModule({ variables: { id } })\n      .then((res) => {\n        if (res.data.deleteModule === true)\n          return history.push(\"/modules/true\");\n        setModuleError(\"Could not delete Module\");\n      })\n      .catch((err) => {\n        setModuleError(err.toString());\n      });\n  };\n\n  /**\n   * Render JSX\n   */\n  return (\n    <React.Fragment>\n      <Dialog\n        open={open}\n        onClose={() => handleClose(false)}\n        aria-labelledby=\"edit-module-dialog\"\n      >\n        <DialogTitle>Confirmation</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Are you sure you want to delete this module?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={() => handleClose(false)}\n            endIcon={<Close />}\n          >\n            Cancel\n          </Button>\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            onClick={submit}\n            disabled={loading}\n            endIcon={loading ? <CircularProgress size={18} /> : <Delete />}\n          >\n            Confirm\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Snackbar\n        open={moduleError !== \"\"}\n        autoHideDuration={6000}\n        onClose={() => setModuleError(\"\")}\n        message={moduleError}\n      ></Snackbar>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(DeleteModule);\n","import { CardActionArea } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\n\n/**\n * Component Types\n */\ntype IProps = {\n  link: string | null;\n  children: any;\n};\n\n/**\n * Conditionally displays an action area to be\n * clicked if there is a link present\n *\n * This component was created because an <a> tag\n * cannot be nested within another <a> tag\n *\n * Therefore on the lesson detail page an <a> tag isnt rendered,\n * so the chips can be rendered\n *\n * @param {string} link - an optional link\n * @param {*} children - The children\n */\nconst LessonActionArea = ({ link = null, children }: IProps) => {\n  if (link)\n    return (\n      <CardActionArea component={Link} to={link}>\n        {children}\n      </CardActionArea>\n    );\n\n  return <div>{children}</div>;\n};\n\nexport default LessonActionArea;\n","import { gql } from \"@apollo/client\";\n\n/**\n * Fetch a list of lessons\n */\nexport const LIST = gql`\n  query getLessons {\n    getLessons {\n      id\n      module {\n        id\n        title\n      }\n      questions {\n        id\n        text {\n          text\n        }\n      }\n    }\n  }\n`;\n\n/**\n * Fetch a lesson by ID\n *\n * @param {id: String}\n */\nexport const READ = gql`\n  query getLesson($id: String!) {\n    getLesson(id: $id) {\n      id\n      createdAt\n      updatedAt\n      module {\n        id\n      }\n      questions {\n        id\n        text {\n          id\n          text\n          order\n        }\n        type\n        answer\n        answerArr\n      }\n    }\n  }\n`;\n\n/**\n * Create a new lesson\n *\n * @param {input: LessonValidator}\n */\nexport const CREATE = gql`\n  mutation addLesson($module: String!, $input: LessonValidator!) {\n    addLesson(module: $module, input: $input) {\n      id\n    }\n  }\n`;\n\n/**\n * Update a lesson by ID\n *\n * @param {id: String!}\n * @param {input: LessonValidator}\n */\nexport const UPDATE = gql`\n  mutation updateLesson($id: String!, $input: LessonValidator!) {\n    updateLesson(id: $id, input: $input) {\n      id\n      title\n      level\n      type\n    }\n  }\n`;\n\n/**\n * Delete a lesson by ID\n *\n * @param {id: String!}\n * @returns {boolean}\n */\nexport const DELETE = gql`\n  mutation deleteLesson($id: String!) {\n    deleteLesson(id: $id)\n  }\n`;\n","import React from \"react\";\n\nimport {\n  withStyles,\n  createStyles,\n  Button,\n  CircularProgress,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  DialogContentText,\n  Snackbar,\n  Theme,\n} from \"@material-ui/core\";\n\nimport { Close, Delete } from \"@material-ui/icons\";\nimport { DELETE } from \"./../../gql/lesson\";\nimport { useMutation } from \"@apollo/client\";\nimport { IHistoryProps } from \"../../types/router\";\n\n/**\n * Injected styles\n *\n * @param {int} spacing\n */\nconst styles = ({ spacing }: Theme) =>\n  createStyles({\n    root: {\n      padding: spacing(1),\n      margin: `${spacing(2)}px 0`,\n    },\n    actions: {\n      justifyContent: \"flex-end\",\n    },\n  });\n\n/**\n * Component Types\n */\ninterface IProps extends IHistoryProps {\n  open: boolean;\n  lesson: any;\n  handleClose: (open: boolean) => void;\n}\n\n/**\n * DeleteLesson Component\n *\n * @param {History} history - the browser history object\n * @param {bool} open - whether the dialog should be open or not\n * @param {*} lesson - The lesson to be deleted\n * @param {*} handleClose - The function to run to close the dialog\n */\nconst DeleteLesson = ({ history, open, lesson, handleClose }: IProps) => {\n  const [lessonError, setLessonError] = React.useState(\"\");\n\n  const [deleteLesson, { loading }] = useMutation(DELETE);\n\n  /**\n   * Check validation and then run the\n   * lesson update network request\n   *\n   * On success,redirect to the home page\n   */\n  const submit = () => {\n    const { id } = lesson;\n\n    deleteLesson({ variables: { id } })\n      .then((res) => {\n        if (res.data.deleteLesson === true)\n          return history.push(`/module/${lesson.module.id}/true`);\n        setLessonError(\"Could not delete Lesson\");\n      })\n      .catch((err) => {\n        setLessonError(err.toString());\n      });\n  };\n  /**\n   * Render JSX\n   */\n  return (\n    <React.Fragment>\n      <Dialog\n        open={open}\n        onClose={() => handleClose(false)}\n        aria-labelledby=\"edit-lesson-dialog\"\n      >\n        <DialogTitle>Confirmation</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Are you sure you want to delete this lesson?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={() => handleClose(false)}\n            endIcon={<Close />}\n          >\n            Cancel\n          </Button>\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            onClick={submit}\n            disabled={loading}\n            endIcon={loading ? <CircularProgress size={18} /> : <Delete />}\n          >\n            Confirm\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Snackbar\n        open={lessonError !== \"\"}\n        autoHideDuration={6000}\n        onClose={() => setLessonError(\"\")}\n        message={lessonError}\n      ></Snackbar>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(DeleteLesson);\n","import { CardActionArea } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\n\n/**\n * Component Types\n */\ntype IProps = {\n  link: string | null;\n  children: any;\n};\n\n/**\n * Conditionally displays an action area to be\n * clicked if there is a link present\n *\n * This component was created because an <a> tag\n * cannot be nested within another <a> tag\n *\n * Therefore on the question detail page an <a> tag isnt rendered,\n * so the chips can be rendered\n *\n * @param {string} link - an optional link\n * @param {*} children - The children\n */\nconst QuestionActionArea = ({ link = null, children }: IProps) => {\n  if (link)\n    return (\n      <CardActionArea component={Link} to={link}>\n        {children}\n      </CardActionArea>\n    );\n\n  return <div>{children}</div>;\n};\n\nexport default QuestionActionArea;\n","import { gql } from \"@apollo/client\";\n\n/**\n * Fetch a list of questions\n */\nexport const LIST = gql`\n  query getQuestions {\n    getQuestions {\n      id\n      title\n      level\n      lessons {\n        id\n      }\n    }\n  }\n`;\n\nexport const LIST_QUESTION_TYPE = gql`\n  query getQuestionTypes {\n    getQuestionTypes\n  }\n`;\n\n/**\n * Fetch a question by ID\n *\n * @param {id: String}\n */\nexport const READ = gql`\n  query getQuestion($id: String!) {\n    getQuestion(id: $id) {\n      id\n      image\n      type\n      createdAt\n      options\n      points\n      answer\n      answerArr\n      answerHint\n      text {\n        id\n        text\n        order\n        note {\n          id\n        }\n      }\n      lesson {\n        id\n      }\n    }\n  }\n`;\n\n/**\n * Create a new question\n *\n * @param {input: QuestionValidator}\n */\nexport const CREATE = gql`\n  mutation addQuestion($lessonId: String!, $input: QuestionValidator!) {\n    addQuestion(lessonId: $lessonId, input: $input) {\n      id\n      lesson {\n        id\n      }\n    }\n  }\n`;\n\n/**\n * Update a question by ID\n *\n * @param {id: String!}\n * @param {input: QuestionValidator}\n */\nexport const UPDATE = gql`\n  mutation updateQuestion($id: String!, $input: QuestionValidator!) {\n    updateQuestion(id: $id, input: $input) {\n      id\n      lesson {\n        id\n      }\n    }\n  }\n`;\n\n/**\n * Delete a question by ID\n *\n * @param {id: String!}\n * @returns {boolean}\n */\nexport const DELETE = gql`\n  mutation deleteQuestion($id: String!) {\n    deleteQuestion(id: $id)\n  }\n`;\n","import React from \"react\";\n\nimport {\n  withStyles,\n  createStyles,\n  Button,\n  CircularProgress,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  DialogContentText,\n  Snackbar,\n  Theme,\n} from \"@material-ui/core\";\n\nimport { Close, Delete } from \"@material-ui/icons\";\nimport { DELETE } from \"./../../gql/question\";\nimport { useMutation } from \"@apollo/client\";\nimport { IHistoryProps } from \"../../types/router\";\n\n/**\n * Injected styles\n *\n * @param {int} spacing\n */\nconst styles = ({ spacing }: Theme) =>\n  createStyles({\n    root: {\n      padding: spacing(1),\n      margin: `${spacing(2)}px 0`,\n    },\n    actions: {\n      justifyContent: \"flex-end\",\n    },\n  });\n\n/**\n * Component Types\n */\ninterface IProps extends IHistoryProps {\n  open: boolean;\n  question: any;\n  handleClose: (open: boolean) => void;\n}\n\n/**\n * DeleteQuestion Component\n *\n * @param {History} history - the browser history object\n * @param {bool} open - whether the dialog should be open or not\n * @param {*} question - The question to be deleted\n * @param {*} handleClose - The function to run to close the dialog\n */\nconst DeleteQuestion = ({ history, open, question, handleClose }: IProps) => {\n  const [questionError, setQuestionError] = React.useState(\"\");\n\n  const [deleteQuestion, { loading }] = useMutation(DELETE);\n\n  /**\n   * Check validation and then run the\n   * question update network request\n   *\n   * On success,redirect to the home page\n   */\n  const submit = () => {\n    const { id } = question;\n\n    deleteQuestion({ variables: { id } })\n      .then((res) => {\n        if (res.data.deleteQuestion === true)\n          return history.push(`/lesson/${question.lesson.id}/true`);\n        setQuestionError(\"Could not delete Question\");\n      })\n      .catch((err) => {\n        setQuestionError(err.toString());\n      });\n  };\n  /**\n   * Render JSX\n   */\n  return (\n    <React.Fragment>\n      <Dialog\n        open={open}\n        onClose={() => handleClose(false)}\n        aria-labelledby=\"edit-question-dialog\"\n      >\n        <DialogTitle>Confirmation</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Are you sure you want to delete this question?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={() => handleClose(false)}\n            endIcon={<Close />}\n          >\n            Cancel\n          </Button>\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            onClick={submit}\n            disabled={loading}\n            endIcon={loading ? <CircularProgress size={18} /> : <Delete />}\n          >\n            Confirm\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Snackbar\n        open={questionError !== \"\"}\n        autoHideDuration={6000}\n        onClose={() => setQuestionError(\"\")}\n        message={questionError}\n      ></Snackbar>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(DeleteQuestion);\n","import React, { useEffect } from \"react\";\n\nimport {\n  CardMedia,\n  createStyles,\n  Fade,\n  makeStyles,\n  Theme,\n} from \"@material-ui/core\";\n\nimport Loading from \"./../components/global/Loading\";\nimport EmptyState from \"./../components/global/EmptyState\";\n\n/**\n * Injected styles\n *\n * @param {Theme} theme\n */\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    preview: {\n      height: 200,\n      minWidth: 200,\n      margin: `${theme.spacing(2)}px auto`,\n      backgroundSize: \"contain\",\n    },\n    cardText: {\n      textAlign: \"center\",\n    },\n  })\n);\n\n/**\n * Component Props\n */\ninterface IProps {\n  photo: string;\n}\n\n/**\n * PreviewDocument Component\n *\n * @param {string} photo - the photo in either base64 format or a URL\n */\nconst PreviewDocument = ({ photo }: IProps) => {\n  const classes = useStyles();\n  const [loading, setLoading] = React.useState(true);\n  const [preview, setPreview] = React.useState<string>(\"\");\n\n  useEffect(() => {\n    /**\n     * Check if a photo exists and there is no\n     *  current preview, and if so set the preview\n     */\n    if (photo && preview === \"\") {\n      setPreview(photo);\n      setLoading(false);\n    } else setLoading(false); // if not set loading to false, and the component will render an error\n  }, [preview, photo]);\n\n  /**\n   * Render JSX\n   */\n  if (loading) return <Loading />;\n  if (!preview) return <EmptyState message=\"Could not preview image\" />;\n  return (\n    <Fade in={true}>\n      <CardMedia image={preview} className={classes.preview} />\n    </Fade>\n  );\n};\n\nexport default PreviewDocument;\n","import {\n  createStyles,\n  makeStyles,\n  Theme,\n  Typography,\n  Button,\n  Card,\n  Chip,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { config } from \"../../config/config\";\nimport PreviewDocument from \"./../../helpers/PreviewImage\";\nimport { QuestionValidator } from \"./../../types/question\";\n\n/**\n * Injected styles\n *\n * @param {int} spacing\n */\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    previewContainer: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      textAlign: \"center\",\n      padding: theme.spacing(2),\n      margin: theme.spacing(2),\n      height: \"55vh\",\n    },\n    optionChip: {\n      background: \"#e0e0e06b\",\n      borderRadius: 8,\n      fontWeight: 800,\n      margin: theme.spacing(1),\n    },\n    doneButton: {\n      width: \"90%\",\n    },\n  })\n);\n\n/**\n * Component Types\n */\ntype IProps = {\n  question: QuestionValidator;\n};\n\n/**\n * PreviewQuestion Component\n *\n * @param {QuestionValidator} question - the Question object\n */\nconst PreviewQuestion = ({ question }: IProps) => {\n  const classes = useStyles();\n\n  const items = [...question.text].sort((a: any, b: any) => a.order - b.order);\n\n  /**\n   * Render JSX\n   */\n  return (\n    <Card className={classes.previewContainer}>\n      <Typography variant=\"h3\">\n        {items.map((item) => {\n          if (item.note) {\n            return (\n              <React.Fragment key={item.text}>\n                <span style={{ color: \"#ff9100\", textDecoration: \"underline\" }}>\n                  {item.text}\n                </span>\n                <span> </span>\n              </React.Fragment>\n            );\n          }\n          return item.text + \" \";\n        })}\n      </Typography>\n\n      <PreviewDocument\n        photo={\n          question.image.includes(\"base64\")\n            ? question.image\n            : config.server_url + \"/images/\" + question.image\n        }\n      />\n      <div>\n        {question.options.map((option) => {\n          return (\n            <Chip key={option} label={option} className={classes.optionChip} />\n          );\n        })}\n      </div>\n      <Button\n        variant=\"contained\"\n        disabled\n        className={classes.doneButton}\n        onClick={() => {}}\n      >\n        Done\n      </Button>\n    </Card>\n  );\n};\n\nexport default PreviewQuestion;\n","import React from \"react\";\n\nimport {\n  createStyles,\n  withStyles,\n  ListItemIcon,\n  ListItemText,\n  Theme,\n  ListItem,\n  CardHeader,\n  CardContent,\n  Zoom,\n  IconButton,\n  Menu,\n  MenuItem,\n} from \"@material-ui/core\";\nimport { Create, Delete, MoreVert, Help } from \"@material-ui/icons\";\nimport { Link } from \"react-router-dom\";\n\nimport QuestionActionArea from \"./QuestionActionArea\";\n\nimport DeleteQuestion from \"./DeleteQuestion\";\nimport PreviewQuestion from \"./PreviewQuestion\";\nimport { IHistoryProps } from \"../../types/router\";\n\n/**\n * Injected styles\n *\n * @param {int} spacing\n * @param {palette} palette - The palette defined in theme.js\n */\nconst styles = ({ palette, spacing }: Theme) =>\n  createStyles({\n    card: {\n      margin: `${spacing(4)}px auto`,\n    },\n\n    avatar: {\n      background: palette.secondary.main,\n    },\n    chipContainer: {\n      \"& > *\": {\n        margin: spacing(0.5),\n      },\n    },\n    divider: {\n      margin: spacing(2),\n    },\n    fab: {\n      position: \"fixed\",\n      bottom: spacing(2),\n      right: spacing(2),\n    },\n  });\n\n/**\n * Component Types\n */\ninterface IProps extends IHistoryProps {\n  displayActions: boolean;\n  question: any;\n  lessonId?: string | null;\n  link?: string | null;\n  delay?: number;\n  disableHeight?: boolean;\n}\n\n/**\n * QuestionItem Component\n *\n * A single comment\n *\n * @param {bool} displayActions - if the question belongs to the authed user, display actions\n * @param {History} history - the browser history object\n * @param {*} question - The question to be displayed\n * @param {*} link - The link to optionally display\n * @param {*} delay - The delay of the animation\n */\nconst QuestionItem = ({\n  displayActions,\n  history,\n\n  question,\n  link = null,\n  delay = 0,\n  lessonId = null,\n}: IProps) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState(false);\n  const open = Boolean(anchorEl);\n\n  /**\n   * Opens the more options menu\n   *\n   * @param {*} event\n   */\n  const handleOpen = (event: any) => {\n    setAnchorEl(event.currentTarget);\n  };\n  /**\n   * Closes the more options menu\n   */\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const items = [...question.text].sort((a: any, b: any) => a.order - b.order);\n\n  /**\n   * Render JSX\n   */\n  if (displayActions)\n    return (\n      <Zoom in={true} style={{ transitionDelay: `${delay}ms` }}>\n        <QuestionActionArea link={link}>\n          <CardHeader\n            title={items.map((item: any) => item.text + \" \")}\n            subheader={\n              question.type === \"MULTIPLE_CHOICE\"\n                ? \"Answer: \" + question.answerArr.map((item: string) => item)\n                : \"Answer: \" + question.answer\n            }\n            action={\n              displayActions && (\n                <React.Fragment>\n                  <IconButton\n                    aria-label=\"more\"\n                    aria-controls=\"long-menu\"\n                    aria-haspopup=\"true\"\n                    onClick={handleOpen}\n                  >\n                    <MoreVert />\n                  </IconButton>\n\n                  <Menu\n                    id=\"menu\"\n                    anchorEl={anchorEl}\n                    open={open}\n                    onClose={handleClose}\n                  >\n                    <MenuItem\n                      component={Link}\n                      to={`/update/question/${\n                        lessonId ? lessonId : question.lesson.id\n                      }/${question.id}`}\n                    >\n                      <ListItemIcon>\n                        <Create />\n                      </ListItemIcon>\n                      <ListItemText primary=\"Edit\" />\n                    </MenuItem>\n                    <MenuItem onClick={() => setOpenDeleteDialog(true)}>\n                      <ListItemIcon>\n                        <Delete />\n                      </ListItemIcon>\n                      <ListItemText primary=\"Delete\" />\n                    </MenuItem>\n                  </Menu>\n                </React.Fragment>\n              )\n            }\n          />\n          <CardContent>\n            <PreviewQuestion question={question} />\n            <DeleteQuestion\n              open={openDeleteDialog}\n              question={question}\n              handleClose={setOpenDeleteDialog}\n              history={history}\n            />\n          </CardContent>\n        </QuestionActionArea>\n      </Zoom>\n    );\n\n  return (\n    <React.Fragment>\n      <ListItem button={true} component={Link} to={`/question/${question.id}`}>\n        <ListItemIcon>\n          <Help />\n        </ListItemIcon>\n        <ListItemText\n          primary={items.map((item: any) => item.text + \" \")}\n          secondary={\n            question.type === \"MULTIPLE_CHOICE\"\n              ? \"Answer: \" + question.answerArr.map((item: string) => item)\n              : \"Answer: \" + question.answer\n          }\n        />\n      </ListItem>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(QuestionItem);\n","/**\n * File: LessonItem.js\n * Project: ca2-client\n * Version 0.1.0\n * File Created: Friday, 15th January 2021 4:07:13 pm\n * Author: Eoan O'Dea (eoan@web-space.design)\n * -----\n * File Description:\n * Last Modified: Saturday, 30th January 2021 2:32:04 pm\n * Modified By: Eoan O'Dea (eoan@web-space.design>)\n * -----\n * Copyright 2021 WebSpace, WebSpace\n */\n\nimport React from \"react\";\n\nimport {\n  createStyles,\n  withStyles,\n  ListItemIcon,\n  ListItemText,\n  Theme,\n  ListItem,\n  Card,\n  CardHeader,\n  CardContent,\n  Zoom,\n  IconButton,\n  Menu,\n  MenuItem,\n  List,\n  Fab,\n  Typography,\n} from \"@material-ui/core\";\nimport { Add, Delete, MoreVert, Book } from \"@material-ui/icons\";\nimport { Link } from \"react-router-dom\";\n\nimport LessonActionArea from \"./LessonActionArea\";\n\nimport DeleteLesson from \"./DeleteLesson\";\nimport QuestionItem from \"./../question/QuestionItem\";\nimport { IHistoryProps } from \"../../types/router\";\n\n/**\n * Injected styles\n *\n * @param {int} spacing\n * @param {palette} palette - The palette defined in theme.js\n */\nconst styles = ({ palette, spacing }: Theme) =>\n  createStyles({\n    card: {\n      margin: `${spacing(4)}px auto`,\n    },\n    fixedHeightCard: {\n      height: 200,\n    },\n    avatar: {\n      background: palette.secondary.main,\n    },\n    chipContainer: {\n      \"& > *\": {\n        margin: spacing(0.5),\n      },\n    },\n    divider: {\n      margin: spacing(2),\n    },\n    fab: {\n      position: \"fixed\",\n      bottom: spacing(2),\n      right: spacing(2),\n    },\n  });\n\n/**\n * Component Types\n */\ninterface IProps extends IHistoryProps {\n  displayActions: boolean;\n  classes: {\n    card: string;\n    fixedHeightCard: string;\n    avatar: string;\n    chipContainer: string;\n    divider: string;\n    fab: string;\n  };\n  lesson: any;\n  link?: string | null;\n  delay?: number;\n  disableHeight?: boolean;\n}\n\n/**\n * LessonItem Component\n *\n * A single comment\n *\n * @param {bool} displayActions - if the lesson belongs to the authed user, display actions\n * @param {History} history - the browser history object\n * @param {Theme} classes - classes passed from Material UI Theme\n * @param {*} lesson - The lesson to be displayed\n * @param {*} link - The link to optionally display\n * @param {*} delay - The delay of the animation\n */\nconst LessonItem = ({\n  displayActions,\n  history,\n  classes,\n  lesson,\n  link = null,\n  delay = 0,\n  disableHeight = true,\n}: IProps) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState(false);\n  const open = Boolean(anchorEl);\n\n  /**\n   * Opens the more options menu\n   *\n   * @param {*} event\n   */\n  const handleOpen = (event: any) => {\n    setAnchorEl(event.currentTarget);\n  };\n  /**\n   * Closes the more options menu\n   */\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  /**\n   * Render JSX\n   */\n  if (displayActions)\n    return (\n      <Zoom in={true} style={{ transitionDelay: `${delay}ms` }}>\n        <Card\n          className={disableHeight ? classes.fixedHeightCard : classes.card}\n        >\n          <LessonActionArea link={link}>\n            <CardHeader\n              title={\"Lesson\"}\n              subheader={new Date(lesson.createdAt).toDateString()}\n              action={\n                displayActions && (\n                  <React.Fragment>\n                    <IconButton\n                      aria-label=\"more\"\n                      aria-controls=\"long-menu\"\n                      aria-haspopup=\"true\"\n                      onClick={handleOpen}\n                    >\n                      <MoreVert />\n                    </IconButton>\n\n                    <Menu\n                      id=\"menu\"\n                      anchorEl={anchorEl}\n                      open={open}\n                      onClose={handleClose}\n                    >\n                      <MenuItem onClick={() => setOpenDeleteDialog(true)}>\n                        <ListItemIcon>\n                          <Delete />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Delete\" />\n                      </MenuItem>\n                    </Menu>\n                  </React.Fragment>\n                )\n              }\n            />\n            <CardContent>\n              {displayActions ? (\n                <React.Fragment>\n                  <List>\n                    {lesson.questions.map(\n                      (question: {\n                        id: React.Key | null | undefined;\n                        updatedAt: Date;\n                      }) => {\n                        return (\n                          <QuestionItem\n                            lessonId={lesson.id}\n                            key={question.id}\n                            history={history}\n                            question={question}\n                            displayActions={false}\n                          />\n                        );\n                      }\n                    )}\n                  </List>\n                  <DeleteLesson\n                    open={openDeleteDialog}\n                    lesson={lesson}\n                    handleClose={setOpenDeleteDialog}\n                    history={history}\n                  />\n                  <Fab\n                    className={classes.fab}\n                    component={Link}\n                    // disabled={loading}\n                    aria-label=\"Add Lesson\"\n                    color=\"secondary\"\n                    // onClick={() => createLesson()}\n                    to={`/create/question/${lesson.id}`}\n                  >\n                    {/* {loading ? <CircularProgress size={18} /> : <Add />} */}\n                    <Add />\n                  </Fab>\n                </React.Fragment>\n              ) : (\n                <Typography variant=\"body2\">\n                  {lesson.lessons.length} Lesson\n                  {lesson.lessons.length > 1 ? \"s\" : \"\"}\n                </Typography>\n              )}\n            </CardContent>\n          </LessonActionArea>\n        </Card>\n      </Zoom>\n    );\n\n  return (\n    <React.Fragment>\n      <ListItem button={true} component={Link} to={`/lesson/${lesson.id}`}>\n        <ListItemIcon>\n          <Book />\n        </ListItemIcon>\n        <ListItemText\n          primary={`Lesson`}\n          secondary={`Last Updated: ${new Date(\n            lesson.updatedAt\n          ).toDateString()}`}\n        />\n      </ListItem>\n\n      <DeleteLesson\n        open={openDeleteDialog}\n        lesson={lesson}\n        handleClose={setOpenDeleteDialog}\n        history={history}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(LessonItem);\n","import React from \"react\";\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  createStyles,\n  withStyles,\n  Zoom,\n  IconButton,\n  Menu,\n  MenuItem,\n  ListItemIcon,\n  ListItemText,\n  Theme,\n  List,\n  Fab,\n  Typography,\n  Snackbar,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport { Add, Create, Delete, MoreVert } from \"@material-ui/icons\";\n\nimport ModuleActionArea from \"./ModuleActionArea\";\nimport DeleteModule from \"./DeleteModule\";\n\nimport { Link } from \"react-router-dom\";\nimport LessonItem from \"./../lesson/LessonItem\";\nimport { useMutation } from \"@apollo/client\";\nimport { CREATE } from \"./../../gql/lesson\";\nimport { IHistoryProps } from \"../../types/router\";\n\n/**\n * Injected styles\n *\n * @param {int} spacing\n * @param {palette} palette - The palette defined in theme.js\n */\nconst styles = ({ palette, spacing }: Theme) =>\n  createStyles({\n    card: {\n      margin: `${spacing(4)}px auto`,\n    },\n    fixedHeightCard: {\n      margin: `${spacing(4)}px auto`,\n    },\n    avatar: {\n      background: palette.secondary.main,\n    },\n    chipContainer: {\n      \"& > *\": {\n        margin: spacing(0.5),\n      },\n    },\n    divider: {\n      margin: spacing(2),\n    },\n    fab: {\n      position: \"fixed\",\n      bottom: spacing(2),\n      right: spacing(2),\n    },\n  });\n\n/**\n * Component Types\n */\ninterface IProps extends IHistoryProps {\n  displayActions: boolean;\n  classes: {\n    card: string;\n    fixedHeightCard: string;\n    avatar: string;\n    chipContainer: string;\n    divider: string;\n    fab: string;\n  };\n  module: any;\n  link?: string | null;\n  delay?: number;\n  disableHeight?: boolean;\n  refetch?: () => void;\n}\n\n/**\n * ModuleItem Component\n *\n * A single comment\n *\n * @param {bool} displayActions - if the module belongs to the authed user, display actions\n * @param {History} history - the browser history object\n * @param {Theme} classes - classes passed from Material UI Theme\n * @param {*} module - The module to be displayed\n * @param {*} link - The link to optionally display\n * @param {*} delay - The delay of the animation\n */\nconst ModuleItem = ({\n  displayActions,\n  history,\n  classes,\n  module,\n  link = null,\n  delay = 0,\n  disableHeight = true,\n  refetch = () => {},\n}: IProps) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState(false);\n  const [lessonMessage, setLessonMessage] = React.useState(\"\");\n\n  const [addLesson, { loading }] = useMutation(CREATE);\n\n  const open = Boolean(anchorEl);\n\n  /**\n   * Opens the more options menu\n   *\n   * @param {*} event\n   */\n  const handleOpen = (event: any) => {\n    setAnchorEl(event.currentTarget);\n  };\n  /**\n   * Closes the more options menu\n   */\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const createLesson = () => {\n    addLesson({\n      variables: {\n        module: module.id,\n        input: {\n          level: module.level,\n        },\n      },\n    })\n      .then(() => {\n        refetch();\n        setLessonMessage(\"Lesson Added\");\n      })\n      .catch((err) => {\n        console.log(\"error!\", err);\n        setLessonMessage(\"Error adding Lesson: \" + err.toString());\n      });\n  };\n\n  /**\n   * Render JSX\n   */\n  return (\n    <Zoom in={true} style={{ transitionDelay: `${delay}ms` }}>\n      <Card className={disableHeight ? classes.fixedHeightCard : classes.card}>\n        <ModuleActionArea link={link}>\n          <CardHeader\n            title={module.title}\n            subheader={new Date(module.createdAt).toDateString()}\n            action={\n              displayActions && (\n                <React.Fragment>\n                  <IconButton\n                    aria-label=\"more\"\n                    aria-controls=\"long-menu\"\n                    aria-haspopup=\"true\"\n                    onClick={handleOpen}\n                  >\n                    <MoreVert />\n                  </IconButton>\n\n                  <Menu\n                    id=\"menu\"\n                    anchorEl={anchorEl}\n                    open={open}\n                    onClose={handleClose}\n                  >\n                    <MenuItem\n                      component={Link}\n                      to={`/update/module/${module.id}`}\n                    >\n                      <ListItemIcon>\n                        <Create />\n                      </ListItemIcon>\n                      <ListItemText primary=\"Edit\" />\n                    </MenuItem>\n                    <MenuItem onClick={() => setOpenDeleteDialog(true)}>\n                      <ListItemIcon>\n                        <Delete />\n                      </ListItemIcon>\n                      <ListItemText primary=\"Delete\" />\n                    </MenuItem>\n                  </Menu>\n                </React.Fragment>\n              )\n            }\n          />\n          <CardContent>\n            {displayActions ? (\n              <React.Fragment>\n                <List>\n                  {module.lessons.map(\n                    (lesson: {\n                      id: React.Key | null | undefined;\n                      updatedAt: Date;\n                    }) => {\n                      return (\n                        <LessonItem\n                          history={history}\n                          lesson={lesson}\n                          key={lesson.id}\n                          link={`/lesson/${lesson.id}`}\n                          displayActions={false}\n                        />\n                      );\n                    }\n                  )}\n                </List>\n                <DeleteModule\n                  open={openDeleteDialog}\n                  module={module}\n                  handleClose={setOpenDeleteDialog}\n                  history={history}\n                />\n                <Fab\n                  className={classes.fab}\n                  // component={Link}\n                  disabled={loading}\n                  aria-label=\"Add Lesson\"\n                  color=\"secondary\"\n                  onClick={() => createLesson()}\n                  // to=\"/create/lesson\"\n                >\n                  {loading ? <CircularProgress size={18} /> : <Add />}\n                </Fab>\n                <Snackbar\n                  open={lessonMessage !== \"\"}\n                  autoHideDuration={6000}\n                  onClose={() => setLessonMessage(\"\")}\n                  message={lessonMessage}\n                ></Snackbar>\n              </React.Fragment>\n            ) : (\n              <Typography variant=\"body2\">\n                {module.lessons.length} Lesson\n                {module.lessons.length > 1 ? \"s\" : \"\"}\n              </Typography>\n            )}\n          </CardContent>\n        </ModuleActionArea>\n      </Card>\n    </Zoom>\n  );\n};\n\nexport default withStyles(styles)(ModuleItem);\n","import React from \"react\";\n\nimport { Button } from \"@material-ui/core\";\nimport { ArrowBack } from \"@material-ui/icons\";\n\nimport { Link, withRouter } from \"react-router-dom\";\n\nimport Loading from \"./../../components/global/Loading\";\nimport EmptyState from \"./../../components/global/EmptyState\";\nimport ModuleItem from \"./../../components/module/ModuleItem\";\nimport { useQuery } from \"@apollo/client\";\nimport { READ } from \"./../../gql/module\";\n\nimport { RouteComponentProps } from \"react-router-dom\";\n\n/**\n * Component Types\n */\ninterface IProps extends RouteComponentProps {\n  match: any;\n}\n\n/**\n * ReadModule Component\n *\n * @param {Theme} classes - classes passed from Material UI Theme\n * @param {Match} match - Contains information about a react-router-dom Route\n */\nconst Read = ({ history, match }: IProps) => {\n  const { id, newFetch } = match.params;\n\n  /**\n   * Destructered variables from the graphql query\n   */\n  const { loading, error, data, refetch } = useQuery(READ, {\n    variables: { id },\n  });\n\n  /**\n   * Render JSX if it is loading or no module exists\n   */\n  if (loading) return <Loading />;\n  if (error || !data.getModule)\n    return (\n      <EmptyState message={error ? error.message : \"Could not load Module\"} />\n    );\n\n  /**\n   * GraphQL often caches queries, but after running some\n   * create or update functions a manual refetch is required\n   *\n   * We pass this in the URL bar as an optional refetch boolean\n   * If it exists, we run the refetch function and redirect to the same page\n   */\n  if (newFetch) {\n    refetch();\n    history.push(`/module/${data.getModule.id}`);\n  }\n\n  /**\n   * Render JSX\n   */\n  return (\n    <React.Fragment>\n      <Button component={Link} to=\"/modules\" startIcon={<ArrowBack />}>\n        Back\n      </Button>\n      <div style={{ position: \"relative\" }}>\n        <ModuleItem\n          module={data.getModule}\n          history={history}\n          displayActions={true}\n          disableHeight={false}\n          refetch={refetch}\n        />\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default withRouter(Read);\n","import { createStyles, Fab, Theme, withStyles } from \"@material-ui/core\";\nimport { Link, RouteComponentProps } from \"react-router-dom\";\nimport React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport Loading from \"./../../components/global/Loading\";\nimport EmptyState from \"./../../components/global/EmptyState\";\nimport ModuleItem from \"./../../components/module/ModuleItem\";\nimport { Add } from \"@material-ui/icons\";\nimport { LIST } from \"./../../gql/module\";\n\n/**\n * Injected styles\n *\n * @param {int} spacing\n */\nconst styles = ({ spacing }: Theme) =>\n  createStyles({\n    root: {\n      maxWidth: \"800px\",\n      margin: \"0 auto\",\n      height: \"500px\",\n      display: \"flex\",\n      textAlign: \"center\",\n      alignItems: \"center\",\n      flexDirection: \"column\",\n      justifyContent: \"space-evenly\",\n    },\n    actions: {\n      justifyContent: \"center\",\n    },\n    fab: {\n      position: \"fixed\",\n      bottom: spacing(2),\n      right: spacing(2),\n    },\n  });\n\n/**\n * Component types\n */\ninterface IProps extends RouteComponentProps {\n  classes: {\n    root: string;\n    actions: string;\n    fab: string;\n  };\n  match: any;\n}\n\n/**\n * ListLesson Component\n *\n * @param {Theme} classes - Injected css styles\n * @param {any} match - the URL bar parameters\n * @param {History} history - the browser history object\n */\nconst List = ({ classes, match, history }: IProps) => {\n  /**\n   * Destructered variables from the graphql query\n   */\n  const { loading, error, data, refetch } = useQuery(LIST);\n\n  /**\n   * GraphQL often caches queries, but after running some\n   * create or update functions a manual refetch is required\n   *\n   * We pass this in the URL bar as an optional refetch boolean\n   */\n  let { newFetch } = match.params;\n  /**\n   * If it exists, we run the refetch function and redirect to the same page\n   */\n  if (newFetch) {\n    refetch();\n    history.push(`/modules`);\n  }\n\n  /**\n   * Render JSX\n   */\n  if (loading) return <Loading />;\n  if (error) return <EmptyState message={error.message} />;\n  return (\n    <React.Fragment>\n      {data.getModules.length < 1 ? (\n        <EmptyState message=\"No Modules Found\" />\n      ) : (\n        data.getModules.map((module: { id: string }) => (\n          <ModuleItem\n            history={history}\n            key={module.id}\n            displayActions={false}\n            module={module}\n            link={`/module/${module.id}`}\n          />\n        ))\n      )}\n      <Fab\n        className={classes.fab}\n        component={Link}\n        aria-label=\"Add Module\"\n        color=\"secondary\"\n        to=\"/create/module\"\n      >\n        <Add />\n      </Fab>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(List);\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  Card,\n  TextField,\n  CardHeader,\n  CardContent,\n  createStyles,\n  withStyles,\n  CardActions,\n  CircularProgress,\n  Typography,\n  Theme,\n} from \"@material-ui/core\";\n\nimport { ArrowBack, Check } from \"@material-ui/icons\";\n\nimport { Link } from \"react-router-dom\";\n\nimport { useMutation } from \"@apollo/client\";\nimport { CREATE } from \"./../../gql/lesson\";\nimport { RouteComponentProps } from \"react-router-dom\";\n\n/**\n * Component types\n */\ninterface IProps extends RouteComponentProps {\n  match: any;\n  classes: {\n    wrapper: string;\n  };\n}\n\n/**\n * Injected styles\n *\n * @param {int} spacing\n */\nconst styles = ({ spacing }: Theme) =>\n  createStyles({\n    wrapper: {\n      padding: spacing(4),\n    },\n  });\n\n/**\n * CreateLesson Component\n *\n * @param {History} history - the browser history object\n * @param {Theme} classes - classes passed from Material UI Theme\n */\nconst Create = ({ history, classes }: IProps) => {\n  const [title, setTitle] = useState(\"\");\n  const [level, setLevel] = useState(0);\n  const [type, setType] = useState(\"\");\n\n  const [titleError, setTitleError] = useState(\"\");\n\n  const [serverError, setServerError] = useState(\"\");\n\n  /**\n   * Define the add Lesson mutation\n   */\n  const [addLesson, { loading }] = useMutation(CREATE);\n\n  /**\n   * Handle validation for form inputs\n   */\n  const handleValidation = () => {\n    let isValid = false;\n    if (title.length < 3) {\n      setTitleError(\"Title must be at least 3 characters\");\n    } else {\n      isValid = true;\n      setTitleError(\"\");\n    }\n\n    return isValid;\n  };\n\n  /**\n   * Validate the inputted info, and if it passes run the mutation\n   */\n  const submit = () => {\n    if (handleValidation()) {\n      setServerError(\"\");\n\n      addLesson({\n        variables: {\n          input: {\n            title,\n            level,\n            type,\n          },\n        },\n      })\n        .then((res: any) => {\n          history.push(`/lessons/true`);\n        })\n        .catch((e) => {\n          setServerError(e.toString());\n        });\n    }\n  };\n\n  /**\n   * Render JSX\n   */\n  return (\n    <React.Fragment>\n      <Button component={Link} to=\"/\" startIcon={<ArrowBack />}>\n        Back\n      </Button>\n      <Card elevation={3} className={classes.wrapper}>\n        <CardHeader title=\"Create Lesson\" />\n\n        <CardContent>\n          <TextField\n            title=\"title\"\n            label=\"Title\"\n            autoFocus={true}\n            margin=\"normal\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            onKeyDown={(e) => e.key === \"Enter\" && submit()}\n            error={titleError !== \"\"}\n            helperText={titleError}\n          />\n\n          <TextField\n            title=\"level\"\n            label=\"Level\"\n            margin=\"normal\"\n            type=\"number\"\n            InputProps={{\n              inputProps: {\n                min: 0,\n                max: 12,\n              },\n            }}\n            value={level}\n            onChange={(e) => setLevel(parseInt(e.target.value))}\n            onKeyDown={(e) => e.key === \"Enter\" && submit()}\n            // error={levelError !== \"\"}\n            // helperText={levelError}\n          />\n\n          <TextField\n            title=\"type\"\n            label=\"Lesson Type\"\n            margin=\"normal\"\n            value={type}\n            onChange={(e) => setType(e.target.value)}\n            onKeyDown={(e) => e.key === \"Enter\" && submit()}\n            // error={typeError !== \"\"}\n            // helperText={typeError}\n          />\n\n          <Typography variant=\"caption\" color=\"error\">\n            {serverError}\n          </Typography>\n        </CardContent>\n        <CardActions>\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            onClick={submit}\n            disabled={loading}\n            endIcon={loading ? <CircularProgress size={18} /> : <Check />}\n          >\n            Save\n          </Button>\n        </CardActions>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(Create);\n","import React from \"react\";\n\nimport { Button } from \"@material-ui/core\";\nimport { ArrowBack } from \"@material-ui/icons\";\n\nimport { Link, withRouter } from \"react-router-dom\";\n\nimport Loading from \"./../../components/global/Loading\";\nimport EmptyState from \"./../../components/global/EmptyState\";\nimport LessonItem from \"./../../components/lesson/LessonItem\";\nimport { useQuery } from \"@apollo/client\";\nimport { READ } from \"./../../gql/lesson\";\nimport { RouteComponentProps } from \"react-router-dom\";\n\n/**\n * Component Types\n */\ninterface IProps extends RouteComponentProps {\n  match: any;\n}\n\n/**\n * ReadLesson Component\n *\n * @param {Theme} classes - classes passed from Material UI Theme\n * @param {Match} match - Contains information about a react-router-dom Route\n */\nconst Read = ({ history, match }: IProps) => {\n  const { id, newFetch } = match.params;\n\n  /**\n   * Destructered variables from the graphql query\n   */\n  const { loading, error, data, refetch } = useQuery(READ, {\n    variables: { id },\n  });\n\n  /**\n   * GraphQL often caches queries, but after running some\n   * create or update functions a manual refetch is required\n   *\n   * We pass this in the URL bar as an optional refetch boolean\n   * If it exists, we run the refetch function and redirect to the same page\n   */\n  if (newFetch) {\n    refetch();\n    history.push(`/lesson/${id}`);\n  }\n\n  /**\n   * Render JSX\n   */\n  if (loading) return <Loading />;\n  if (error || !data.getLesson)\n    return (\n      <EmptyState message={error ? error.message : \"Could not load Lesson\"} />\n    );\n  return (\n    <React.Fragment>\n      <Button\n        component={Link}\n        to={`/module/${data.getLesson.module.id}`}\n        startIcon={<ArrowBack />}\n      >\n        Back\n      </Button>\n      <div style={{ position: \"relative\" }}>\n        <LessonItem\n          lesson={data.getLesson}\n          history={history}\n          displayActions={true}\n          disableHeight={false}\n        />\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default withRouter(Read);\n","import { createStyles, Fab, Theme, withStyles } from \"@material-ui/core\";\nimport { Link, RouteComponentProps } from \"react-router-dom\";\nimport React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport Loading from \"./../../components/global/Loading\";\nimport EmptyState from \"./../../components/global/EmptyState\";\nimport LessonItem from \"./../../components/lesson/LessonItem\";\nimport { Add } from \"@material-ui/icons\";\nimport { LIST } from \"./../../gql/lesson\";\n\n/**\n * Injected styles\n *\n * @param {int} spacing\n */\nconst styles = ({ spacing }: Theme) =>\n  createStyles({\n    root: {\n      maxWidth: \"800px\",\n      margin: \"0 auto\",\n      height: \"500px\",\n      display: \"flex\",\n      textAlign: \"center\",\n      alignItems: \"center\",\n      flexDirection: \"column\",\n      justifyContent: \"space-evenly\",\n    },\n    actions: {\n      justifyContent: \"center\",\n    },\n    fab: {\n      position: \"fixed\",\n      bottom: spacing(2),\n      right: spacing(2),\n    },\n  });\n\n/**\n * Component types\n */\ninterface IProps extends RouteComponentProps {\n  classes: {\n    root: string;\n    actions: string;\n    fab: string;\n  };\n  match: any;\n}\n\n/**\n * ListLesson Component\n *\n * @param {Theme} classes - Injected css styles\n * @param {History} history - the browser history object\n * @param {Theme} classes - classes passed from Material UI Theme\n */\nconst List = ({ classes, match, history }: IProps) => {\n  /**\n   * Destructered variables from the graphql query\n   */\n  const { loading, error, data, refetch } = useQuery(LIST);\n\n  /**\n   * GraphQL often caches queries, but after running some\n   * create or update functions a manual refetch is required\n   *\n   * We pass this in the URL bar as an optional refetch boolean\n   */\n  let { newFetch } = match.params;\n  /**\n   * If it exists, we run the refetch function and redirect to the same page\n   */\n  if (newFetch) {\n    refetch();\n    history.push(`/lessons`);\n  }\n\n  /**\n   * Render JSX\n   */\n  if (loading) return <Loading />;\n  if (error) return <EmptyState message={error.message} />;\n  return (\n    <React.Fragment>\n      {data.getLessons.length < 1 ? (\n        <EmptyState message=\"No Lessons Found\" />\n      ) : (\n        data.getLessons.map((lesson: { id: any }) => (\n          <LessonItem\n            history={history}\n            key={lesson.id}\n            displayActions={false}\n            lesson={lesson}\n            link={`/lesson/${lesson.id}`}\n          />\n        ))\n      )}\n      <Fab\n        className={classes.fab}\n        component={Link}\n        aria-label=\"Add Lesson\"\n        color=\"secondary\"\n        to=\"/create/lesson\"\n      >\n        <Add />\n      </Fab>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(List);\n","import { useState, useCallback } from \"react\";\nimport { PanInfo, AxisBox2D, BoxDelta } from \"framer-motion\";\n\nexport type FixedListProps<T> = {\n  items: T[];\n  swapDistance: number;\n  onPositionUpdate: (from: number, to: number) => void;\n  onPositionChange?: (startIndex: number, endIndex: number) => void;\n};\n\nexport type FixedListItemProps = {\n  handleChange: (i: number, dragOffset: number) => void;\n  handleDragStart: (index: number) => void;\n  handleDragEnd: (endIndex: number) => void;\n};\n\nexport const findIndex = (\n  i: number,\n  offset: number,\n  length: number,\n  swapDistance: number\n) => {\n  let target = i;\n\n  // If moving down\n  if (offset > 0) {\n    if (i === length - 1) return i;\n    if (offset > swapDistance) target = i + 1;\n  }\n  // If moving up\n  else if (offset < 0) {\n    if (i === 0) return i;\n    if (offset < -swapDistance) target = i - 1;\n  }\n\n  return Math.min(Math.max(target, 0), length);\n};\n\nexport function useFixedList<T>({\n  items,\n  swapDistance,\n  onPositionUpdate,\n  onPositionChange,\n}: FixedListProps<T>): FixedListItemProps {\n  const [startIndex, handleDragStart] = useState(-1);\n\n  const handleChange = useCallback(\n    (i: number, dragOffset: number) => {\n      const targetIndex = findIndex(i, dragOffset, items.length, swapDistance);\n      if (targetIndex !== i) {\n        onPositionUpdate(i, targetIndex);\n      }\n    },\n    [items.length, swapDistance, onPositionUpdate]\n  );\n\n  const handleDragEnd = useCallback(\n    (endIndex: number) => {\n      if (onPositionChange && startIndex !== endIndex)\n        onPositionChange(startIndex, endIndex);\n      handleDragStart(-1);\n    },\n    [startIndex, onPositionChange]\n  );\n\n  return {\n    handleChange,\n    handleDragStart,\n    handleDragEnd,\n  };\n}\n\ntype DragState = \"idle\" | \"animating\" | \"dragging\";\n\ntype FixedListItemResult = [\n  DragState,\n  {\n    onDragStart(\n      event: MouseEvent | TouchEvent | PointerEvent,\n      info: PanInfo\n    ): void;\n    onDragEnd(\n      event: MouseEvent | TouchEvent | PointerEvent,\n      info: PanInfo\n    ): void;\n    onAnimationComplete(): void;\n    onViewportBoxUpdate(box: AxisBox2D, delta: BoxDelta): void;\n  }\n];\n\nexport function useFixedListItem(\n  index: number,\n  { handleChange, handleDragStart, handleDragEnd }: FixedListItemProps\n): FixedListItemResult {\n  const [state, setState] = useState<DragState>(\"idle\");\n\n  return [\n    state,\n    {\n      onDragStart: () => {\n        setState(\"dragging\");\n        handleDragStart(index);\n      },\n      onDragEnd: () => {\n        setState(\"animating\");\n        handleDragEnd(index);\n      },\n      onAnimationComplete: () => {\n        if (state === \"animating\") setState(\"idle\");\n      },\n      onViewportBoxUpdate: (_viewportBox, delta) => {\n        if (state === \"dragging\") handleChange(index, delta.y.translate);\n      },\n    },\n  ];\n}\n","export function moveArray<T>(items: T[], startIndex: number, endIndex: number) {\n  const clone = [...items];\n  clone[endIndex] = items[startIndex];\n  clone[startIndex] = items[endIndex];\n  return clone;\n}\n\nexport const calculateSwapDistance = (sibling: number) => sibling;\n\nexport const getDragStateZIndex = (state: string, base = 0) => {\n  switch (state) {\n    case \"dragging\":\n      return base + 3;\n    case \"animating\":\n      return base + 2;\n    default:\n      return base + 1;\n  }\n};\n","import React, { useCallback } from \"react\";\nimport { motion } from \"framer-motion\";\n\nimport { useFixedList, useFixedListItem, FixedListItemProps } from \"./fixed\";\nimport { getDragStateZIndex, moveArray } from \"./utils\";\n\nimport { IItem, IListItem } from \"./../../types/question\";\n\ntype FixedSizeItemProps = {\n  index: number;\n  height: number;\n  item: IListItem;\n  itemProps: FixedListItemProps;\n  listItem: (item: IListItem) => JSX.Element;\n};\n\nfunction FixedSizeItem({\n  index,\n  height,\n  item,\n  itemProps,\n  listItem,\n}: FixedSizeItemProps) {\n  const [dragState, eventHandlers] = useFixedListItem(index, itemProps);\n\n  return (\n    <div\n      style={{\n        padding: 0,\n        height,\n        // If we're dragging, we want to set the zIndex of that item to be on top of the other items.\n        zIndex: getDragStateZIndex(dragState),\n      }}\n    >\n      <motion.div\n        layout\n        initial={false}\n        drag=\"y\"\n        style={{\n          height,\n          borderRadius: 5,\n        }}\n        whileHover={{\n          scale: 1.03,\n          boxShadow: \"0px 3px 3px rgba(0,0,0,0.15)\",\n        }}\n        whileTap={{\n          scale: 1.12,\n          boxShadow: \"0px 5px 5px rgba(0,0,0,0.1)\",\n        }}\n        {...eventHandlers}\n      >\n        {listItem(item)}\n      </motion.div>\n    </div>\n  );\n}\ninterface IProps {\n  items: IItem[];\n  setItems: (items: IItem[]) => void;\n  listItem: (item: IListItem) => JSX.Element;\n}\nexport default function FixedSizeList({ items, setItems, listItem }: IProps) {\n  const onPositionUpdate = useCallback(\n    (startIndex: number, endIndex: number) => {\n      setItems(moveArray(items, startIndex, endIndex));\n    },\n    [items, setItems]\n  );\n\n  const props = useFixedList({\n    items,\n    swapDistance: 60,\n    onPositionUpdate,\n  });\n\n  return (\n    <React.Fragment>\n      {items.map((item, i) => (\n        <FixedSizeItem\n          key={item.id}\n          index={i}\n          height={60}\n          item={{ i, ...item }}\n          listItem={listItem}\n          itemProps={props}\n        ></FixedSizeItem>\n      ))}\n    </React.Fragment>\n  );\n}\n","import { gql } from \"@apollo/client\";\n\n/**\n * Fetch a list of notes\n */\nexport const LIST = gql`\n  query getNotes {\n    getNotes {\n      id\n      title\n      markdown\n      sanitizedHtml\n    }\n  }\n`;\n\n/**\n * Fetch a note by ID\n *\n * @param {id: String}\n */\nexport const READ = gql`\n  query getNote($id: String!) {\n    getNote(id: $id) {\n      id\n      title\n      markdown\n      sanitizedHtml\n    }\n  }\n`;\n\n/**\n * Create a new note\n *\n * @param {input: NoteValidator}\n */\nexport const CREATE = gql`\n  mutation addNote($questionText: String!, $input: NoteValidator!) {\n    addNote(questionText: $questionText, input: $input) {\n      id\n    }\n  }\n`;\n\n/**\n * Update a note by ID\n *\n * @param {id: String!}\n * @param {input: NoteValidator}\n */\nexport const UPDATE = gql`\n  mutation updateNote($id: String!, $input: NoteValidator!) {\n    updateNote(id: $id, input: $input) {\n      id\n    }\n  }\n`;\n\n/**\n * Delete a note by ID\n *\n * @param {id: String!}\n * @returns {boolean}\n */\nexport const DELETE = gql`\n  mutation deleteNote($id: String!) {\n    deleteNote(id: $id)\n  }\n`;\n","import { useMutation } from \"@apollo/client\";\nimport {\n  Button,\n  CircularProgress,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport { Check } from \"@material-ui/icons\";\nimport { useState } from \"react\";\nimport { CREATE } from \"./../../gql/note\";\n\n/**\n * Component Types\n */\ntype IProps = {\n  newNote: (title: string, id: string) => void;\n};\n\n/**\n * CreateNote Component\n *\n * @param {newNote} newNote - The function to run after a new note has been created\n */\nconst CreateNote = ({ newNote }: IProps) => {\n  const [title, setTitle] = useState(\"\");\n  const [titleError, setTitleError] = useState(\"\");\n\n  const [note, setNote] = useState(\"\");\n  const [noteError, setNoteError] = useState(\"\");\n\n  const [loading, setLoading] = useState(false);\n\n  const [createNote] = useMutation(CREATE);\n\n  const [serverError, setServerError] = useState(\"\");\n\n  /**\n   * Handle Validation for the input\n   */\n  const handleValidation = () => {\n    if (title.length < 3) {\n      setTitleError(\"Title must be at least 3 characters\");\n      return false;\n    }\n    setTitleError(\"\");\n\n    if (note.length < 5) {\n      setNoteError(\"Note must be at least 5 characters\");\n      return false;\n    }\n    setNoteError(\"\");\n    return true;\n  };\n\n  /**\n   * Submit the newely created note for\n   * validation and then save to the server\n   */\n  const submit = () => {\n    if (handleValidation()) {\n      setLoading(true);\n      setServerError(\"\");\n      createNote({\n        variables: {\n          questionText: \"\",\n          input: {\n            title,\n            markdown: note,\n          },\n        },\n      })\n        .then((res: any) => {\n          newNote(title, res.data.addNote.id);\n        })\n        .catch((err) => {\n          setLoading(false);\n\n          setServerError(err.toString());\n        });\n    }\n  };\n  /**\n   * Render JSX\n   */\n  return (\n    <div>\n      <TextField\n        title=\"title\"\n        label=\"Title\"\n        autoFocus={true}\n        margin=\"normal\"\n        value={title}\n        onChange={(e) => setTitle(e.target.value)}\n        // onKeyDown={(e) => e.key === \"Enter\" && submit()}\n        error={titleError !== \"\"}\n        helperText={titleError}\n      />\n      <TextField\n        aria-label=\"Note content\"\n        rows={8}\n        label=\"Add your note content...\"\n        placeholder=\"Add your note content...\"\n        multiline\n        value={note}\n        onChange={(e) => setNote(e.target.value)}\n        // onKeyDown={(e) => e.key === \"Enter\" && submit()}\n        error={noteError !== \"\"}\n        helperText={noteError}\n      />\n\n      <Typography variant=\"caption\" color=\"error\">\n        {serverError}\n      </Typography>\n\n      <Button\n        disabled={loading}\n        endIcon={loading ? <CircularProgress size={18} /> : <Check />}\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={submit}\n      >\n        Save\n      </Button>\n    </div>\n  );\n};\n\nexport default CreateNote;\n","import { ArrowBack, Link as LinkIcon } from \"@material-ui/icons\";\nimport {\n  Button,\n  createStyles,\n  Dialog,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  makeStyles,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { LIST } from \"./../../gql/note\";\nimport { useQuery } from \"@apollo/client\";\nimport EmptyState from \"./../global/EmptyState\";\nimport Loading from \"./../global/Loading\";\nimport CreateNote from \"./CreateNote\";\n\n/**\n * Injected styles\n *\n */\nconst useStyles = makeStyles(() =>\n  createStyles({\n    iconButton: {\n      padding: 10,\n    },\n  })\n);\n/**\n * Component Types\n */\ntype IProps = {\n  i: number;\n  hasNote: boolean;\n  onSelect: (i: number, id: string) => void;\n};\n\n/**\n * NoteDialog Component\n *\n * @param {number} i - the index of the QuestionText within the list\n * @param {bool} hasNote - whether the QuestionText already has a note\n * @param {onSelect} onSelect - The function to call when a note has been selected\n */\nconst NoteDialog = ({ i, onSelect, hasNote = false }: IProps) => {\n  const classes = useStyles();\n  const { loading, error, data, refetch } = useQuery(LIST);\n\n  const [createNote, setCreateNote] = useState(false);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [openDialog, setOpenDialog] = useState(false);\n\n  /**\n   * A newely created note\n   *\n   * @param {string} title\n   * @param {string} id\n   */\n  const newNote = (title: string, id: string) => {\n    refetch();\n    setSearchQuery(title);\n    setCreateNote(false);\n    selectItem(id);\n  };\n\n  /**\n   * Selecting an item to send back to the Question Text\n   *\n   * @param {string} id\n   */\n  const selectItem = (id: string) => {\n    onSelect(i, id);\n    setOpenDialog(false);\n  };\n  /**\n   * Filter the notes based on the search query\n   */\n  const filteredItems =\n    data && data.getNotes\n      ? data.getNotes.filter((item: any) => {\n          if (searchQuery !== \"\")\n            return item.title.toLowerCase().includes(searchQuery.toLowerCase());\n          return true;\n        })\n      : [];\n  /**\n   * Render JSX\n   */\n  return (\n    <React.Fragment>\n      <IconButton\n        onClick={() => setOpenDialog(true)}\n        color={hasNote ? \"primary\" : \"default\"}\n        className={classes.iconButton}\n        aria-label=\"Add a link to text\"\n      >\n        <LinkIcon />\n      </IconButton>\n      <Dialog\n        open={openDialog}\n        onClose={() => setOpenDialog(false)}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Attach a note to this text\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Attaching a note allows the user to select this piece of text, and\n            view more details about it\n          </DialogContentText>\n          {createNote ? (\n            <React.Fragment>\n              <Button\n                startIcon={<ArrowBack />}\n                onClick={() => setCreateNote(false)}\n              >\n                Back\n              </Button>\n              <CreateNote newNote={newNote} />\n            </React.Fragment>\n          ) : (\n            <React.Fragment>\n              <TextField\n                title=\"Search notes\"\n                label=\"Search existing notes\"\n                autoFocus={true}\n                margin=\"normal\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n              />\n\n              <List>\n                {error ? (\n                  <EmptyState message={error.message} />\n                ) : loading ? (\n                  <Loading />\n                ) : filteredItems.length > 0 ? (\n                  filteredItems.map((item: any) => {\n                    return (\n                      <ListItem\n                        key={item.id}\n                        button\n                        onClick={() => selectItem(item.id)}\n                      >\n                        <ListItemText>{item.title}</ListItemText>\n                      </ListItem>\n                    );\n                  })\n                ) : (\n                  <div>\n                    <Typography>Could not find any notes</Typography>\n                    <Button color=\"primary\" onClick={() => setCreateNote(true)}>\n                      Create one\n                    </Button>\n                  </div>\n                )}\n              </List>\n            </React.Fragment>\n          )}\n        </DialogContent>\n      </Dialog>\n    </React.Fragment>\n  );\n};\n\nexport default NoteDialog;\n","import {\n  createStyles,\n  Divider,\n  FormHelperText,\n  Grow,\n  IconButton,\n  InputBase,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  ListItemText,\n  makeStyles,\n  Paper,\n  Theme,\n  Typography,\n} from \"@material-ui/core\";\nimport {\n  Add,\n  Close,\n  Delete,\n  DragIndicator,\n  Edit,\n  Link as LinkIcon,\n} from \"@material-ui/icons\";\nimport { createRef, FormEvent, useCallback, useEffect, useState } from \"react\";\nimport { useQuestion } from \"./../CreateQuestion\";\nimport { IItem, IListItem } from \"./../../../../types/question\";\nimport FixedSizeList from \"./../../../motion/FixedSizeList\";\nimport NoteDialog from \"./../../../note\";\n\n/**\n * Injected styles\n *\n * @param {Theme} theme\n */\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: \"2px 4px\",\n      margin: theme.spacing(3),\n    },\n    inputContainer: {\n      padding: \"2px 4px\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      margin: \"auto\",\n      alignItems: \"center\",\n      width: \"80%\",\n    },\n    input: {\n      marginLeft: theme.spacing(1),\n      flex: 1,\n    },\n    iconButton: {\n      padding: 10,\n    },\n    divider: {\n      height: 28,\n      margin: 4,\n    },\n    listItem: {\n      cursor: \"move\",\n    },\n  })\n);\n\n/**\n * QuestionText Component\n *\n * Allows the user to add Question Text,\n * and re order the text by dragging and dropping\n */\nconst QuestionText = () => {\n  const classes = useStyles();\n\n  const [question, setQuestion] = useQuestion();\n\n  const [activeText, setActiveText] = useState(\"\");\n  const [activeTextError, setActiveTextError] = useState(\"\");\n\n  const [editIndex, setEditIndex] = useState(-1);\n\n  const [items, setItems] = useState<IItem[]>(() => []);\n\n  /**\n   * Creates a Ref for the input field\n   */\n  const inputRef = createRef<HTMLInputElement>();\n  /**\n   * Sync the current items within the component with the question context\n   */\n  const syncQuestions = useCallback(() => {\n    let newQuestion = question;\n    newQuestion.text = items.map((item, i) => {\n      return { order: i, text: item.text, note: item.note };\n    });\n    return setQuestion(newQuestion);\n  }, [items, question, setQuestion]);\n\n  useEffect(() => {\n    /**\n     * If there are existing items on the question, convert them to items\n     */\n    if (question.text.length > 0 && items.length === 0) {\n      const newItems = question.text.map((item, i) => {\n        return { id: i, text: item.text };\n      });\n\n      return setItems(newItems);\n    }\n    /**\n     * Sync the questions\n     */\n    syncQuestions();\n  }, [question, items, syncQuestions]);\n\n  /**\n   * Validate the text input, and if passes, add the text as an item\n   *\n   * @param {FormEvent} e\n   */\n  const submit = (e: FormEvent) => {\n    e.preventDefault();\n    if (activeText.length < 1)\n      return setActiveTextError(\"Text must be at least one character\");\n\n    if (editIndex !== -1) {\n      const itemI = items.findIndex((item) => item.id === editIndex);\n\n      setItems((old) => {\n        old[itemI].text = activeText;\n        return [...old];\n      });\n      setEditIndex(-1);\n    } else {\n      const newItem = {\n        id: items.length + 1,\n        text: activeText,\n      };\n      setItems((old) => [...old, newItem]);\n    }\n\n    setActiveText(\"\");\n    setActiveTextError(\"\");\n  };\n\n  /**\n   * Edit an item\n   *\n   * @param {number} id\n   */\n  const editItem = (id: number) => {\n    const itemI = items.findIndex((item) => item.id === id);\n    setEditIndex(id);\n\n    setActiveText(items[itemI].text);\n    if (inputRef && inputRef.current) inputRef.current.focus();\n  };\n\n  /**\n   * Remove an item\n   *\n   * @param {number} id\n   */\n  const removeItem = (id: number) => {\n    const itemI = items.findIndex((item) => item.id === id);\n    const newItems = items;\n\n    newItems.splice(itemI, 1);\n    setItems([...newItems]);\n    syncQuestions();\n  };\n\n  /**\n   * Attach a note to an existing question text\n   *\n   * @param {number} i\n   * @param {string} id\n   */\n  const addNote = (i: number, id: string) => {\n    const itemI = items.findIndex((item) => item.id === i);\n\n    let newItems = items;\n    newItems[itemI].note = id;\n    setItems([...newItems]);\n    syncQuestions();\n  };\n\n  /**\n   * Renders a single list item\n   *\n   * @param {IListItem} - {id, text} - the id and text of the item\n   * @returns\n   */\n  const Item = ({ id, text, note = \"\" }: IListItem) => {\n    return (\n      <ListItem className={classes.listItem}>\n        <ListItemIcon>\n          <DragIndicator />\n        </ListItemIcon>\n        <Grow in={true}>\n          <ListItemText>{text}</ListItemText>\n        </Grow>\n        <ListItemIcon>\n          <IconButton onClick={() => editItem(id)}>\n            <Edit />\n          </IconButton>\n        </ListItemIcon>\n        <ListItemSecondaryAction>\n          <IconButton aria-label=\"comments\" onClick={() => removeItem(id)}>\n            <Delete />\n          </IconButton>\n        </ListItemSecondaryAction>\n        <NoteDialog i={id} hasNote={note !== \"\"} onSelect={addNote} />\n\n        <ListItemIcon></ListItemIcon>\n      </ListItem>\n    );\n  };\n\n  /**\n   * Render JSX\n   */\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h1\">Add Question Text</Typography>\n\n      <Paper className={classes.inputContainer}>\n        <InputBase\n          className={classes.input}\n          placeholder=\"Add a new text item\"\n          inputProps={{ \"aria-label\": \"Add item\" }}\n          autoFocus={true}\n          inputRef={inputRef}\n          value={activeText}\n          onChange={(e) => setActiveText(e.target.value)}\n          onKeyDown={(e) => e.key === \"Enter\" && submit(e)}\n          error={activeTextError !== \"\"}\n        />\n        <Grow in={editIndex !== -1}>\n          <IconButton\n            className={classes.iconButton}\n            aria-label=\"Cancel edit\"\n            onClick={() => {\n              setEditIndex(-1);\n              setActiveText(\"\");\n            }}\n          >\n            <Close />\n          </IconButton>\n        </Grow>\n        <IconButton\n          className={classes.iconButton}\n          aria-label={editIndex !== -1 ? \"Edit\" : \"Create\"}\n          onClick={submit}\n        >\n          {editIndex !== -1 ? <Edit /> : <Add />}\n        </IconButton>\n        <Divider className={classes.divider} orientation=\"vertical\" />\n        <IconButton\n          className={classes.iconButton}\n          aria-label=\"Add a link to text\"\n        >\n          <LinkIcon />\n        </IconButton>\n      </Paper>\n      <FormHelperText error>{activeTextError}</FormHelperText>\n      <List>\n        <FixedSizeList items={items} setItems={setItems} listItem={Item} />\n      </List>\n    </div>\n  );\n};\n\nexport default QuestionText;\n","import {\n  Button,\n  createStyles,\n  FormHelperText,\n  makeStyles,\n  Fade,\n  Theme,\n  Typography,\n} from \"@material-ui/core\";\nimport { Clear, PhotoCamera } from \"@material-ui/icons\";\nimport React, { useEffect, useState } from \"react\";\nimport { useQuestion } from \"./../CreateQuestion\";\nimport PreviewDocument from \"./../../../../helpers/PreviewImage\";\nimport { config } from \"../../../../config/config\";\n\n/**\n * Injected styles\n *\n * @param {Theme} theme\n */\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: \"2px 4px\",\n      margin: theme.spacing(3),\n    },\n    label: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      margin: `${theme.spacing(4)}px auto`,\n    },\n    input: {\n      display: \"none\",\n    },\n    uploadHelpText: {\n      textAlign: \"center\",\n    },\n  })\n);\n\n/**\n * QuestionImage Component\n *\n * Optionally upload an image to the question\n */\nconst QuestionImage = () => {\n  const classes = useStyles();\n  const [question, setQuestion] = useQuestion();\n  const [uploaded, setUploaded] = useState<boolean>(false);\n  const [error, setError] = useState(\"\");\n\n  /**\n   * Check if an existing image is on the question object\n   * If so, set preview mode to true and display that image\n   */\n  useEffect(() => {\n    if (question.image !== \"\") {\n      return setUploaded(true);\n    }\n    setUploaded(false);\n  }, [question, uploaded]);\n\n  /**\n   * Handle a file upload from the user,\n   * validate it and convert it to base64 format\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event\n   * @returns {void}\n   */\n  const onFileUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (!event.target.files) {\n      return setError(\"Please upload an image\");\n    }\n    const file = event.target.files[0];\n\n    if (file.size > 6145728)\n      return setError(\"Upload cannot be greater than 6 MegaBytes\");\n    setError(\"\");\n\n    try {\n      const img = await getBase64Image(file);\n      if (typeof img === \"string\") {\n        let newQuestion = question;\n        newQuestion.image = img;\n\n        setQuestion(newQuestion);\n        return setUploaded(true);\n      }\n      setError(\"Could not upload image\");\n    } catch (err) {\n      setError((\"Could not upload file: \" + err) as string);\n    }\n  };\n\n  /**\n   * Convert the file to Base64 format\n   *\n   * @param {File} file\n   * @returns {string | null} Promise with either a string of the image, or null\n   */\n  const getBase64Image = (file: File) => {\n    return new Promise<string | null>(async (resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = () => resolve(reader.result as string);\n      reader.onerror = (error) => reject(error);\n      reader.readAsDataURL(file);\n    });\n  };\n\n  /**\n   * Clear the current upload\n   */\n  const clearUpload = () => {\n    let newQuestion = question;\n    newQuestion.image = \"\";\n    setUploaded(false);\n    setQuestion(newQuestion);\n  };\n\n  /**\n   * Render JSX\n   */\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h1\">Add an Image</Typography>\n      {uploaded ? (\n        <React.Fragment>\n          <PreviewDocument\n            photo={\n              question.image.includes(\"base64\")\n                ? question.image\n                : config.server_url + \"/images/\" + question.image\n            }\n          />\n          <br />\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => clearUpload()}\n            endIcon={<Clear />}\n            className={classes.label}\n          >\n            Clear\n          </Button>\n        </React.Fragment>\n      ) : (\n        <React.Fragment>\n          <input\n            accept=\".jpg, .png, .jpeg\"\n            className={classes.input}\n            id=\"photo-upload\"\n            type=\"file\"\n            name={\"photo-upload\"}\n            onChange={(e) => onFileUpload(e)}\n          />\n          <Fade in={true}>\n            <label htmlFor=\"photo-upload\" className={classes.label}>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                component=\"span\"\n                endIcon={<PhotoCamera />}\n              >\n                Upload\n              </Button>\n              <FormHelperText\n                error={error !== \"\"}\n                className={classes.uploadHelpText}\n              >\n                {error ? error : \"Maximum Size: 6 MB\"}\n              </FormHelperText>\n            </label>\n          </Fade>\n        </React.Fragment>\n      )}\n    </div>\n  );\n};\nexport default QuestionImage;\n","import {\n  createStyles,\n  makeStyles,\n  Theme,\n  Typography,\n  FormControl,\n  FormLabel,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n} from \"@material-ui/core\";\n\nimport React from \"react\";\nimport { useQuestion } from \"./../CreateQuestion\";\n\n/**\n * Injected styles\n *\n * @param {Theme} theme\n */\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: \"2px 4px\",\n      margin: theme.spacing(3),\n    },\n  })\n);\n\n/**\n * QuestionType Component\n *\n * Allows the user to select the type of question\n */\nconst QuestionType = () => {\n  const classes = useStyles();\n  const [question, setQuestion] = useQuestion();\n\n  /**\n   * Fetch the options from the server\n   *\n   * There was a bug here where on deployment the options wouldn't fetch sometimes,\n   * so a fallback to check if they exist, and if not, deliver hard coded options\n   */\n  const options =\n    question.questionTypeOptions.length < 1\n      ? [\"Multiple Choice\", \"Text\"]\n      : question.questionTypeOptions;\n\n  /**\n   * Handle selecting an option for the question type\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event\n   */\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    let newQuestion = question;\n    newQuestion.type = capitalize(\n      (event.target as HTMLInputElement).value.replace(\"_\", \" \").toLowerCase()\n    );\n\n    setQuestion({ ...newQuestion });\n  };\n\n  /**\n   * Capitalizes a string\n   *\n   * @param {string} str\n   * @returns {string} - the string but capitalized\n   */\n  const capitalize = (str: string) => {\n    return str\n      .split(\" \")\n      .map((item) => item.charAt(0).toUpperCase() + item.slice(1))\n      .join(\" \");\n  };\n\n  /**\n   * Render JSX\n   */\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h1\">Select Question Type</Typography>\n\n      <FormControl component=\"fieldset\">\n        <FormLabel component=\"legend\">Question Type</FormLabel>\n        <RadioGroup\n          aria-label=\"question-type\"\n          name=\"question-type\"\n          defaultValue={question.type}\n          value={capitalize(question.type.replace(\"_\", \" \").toLowerCase())}\n          onChange={handleChange}\n        >\n          {options.map((item) => (\n            <FormControlLabel\n              key={item}\n              value={capitalize(item.replace(\"_\", \" \").toLowerCase())}\n              control={<Radio />}\n              label={item}\n            />\n          ))}\n        </RadioGroup>\n      </FormControl>\n    </div>\n  );\n};\nexport default QuestionType;\n","import {\n  createStyles,\n  makeStyles,\n  Theme,\n  Typography,\n  TextField,\n  Checkbox,\n} from \"@material-ui/core\";\nimport {\n  CheckBoxOutlineBlank,\n  CheckBox as CheckBoxIcon,\n} from \"@material-ui/icons\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport React from \"react\";\nimport { useQuestion } from \"./../CreateQuestion\";\n\n/**\n * Injected styles\n *\n * @param {Theme} theme\n */\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: \"2px 4px\",\n      margin: theme.spacing(3),\n    },\n  })\n);\n\n/**\n * QuestionAnswer Component\n *\n * Selects an answer from the list of options defined in the QuestionOptions component\n */\nconst QuestionAnswer = () => {\n  const classes = useStyles();\n  const [question, setQuestion] = useQuestion();\n\n  /**\n   * Handle change for a multi choice answer\n   *\n   * @param {string[]} value\n   */\n  const handleMultiChoiceChange = (value: string[]) => {\n    let newQuestion = question;\n    newQuestion.answerArr = value;\n\n    setQuestion(newQuestion);\n  };\n\n  /**\n   * Handle change for a text answer\n   *\n   * @param {string} value\n   */\n  const handleTextChange = (value: string) => {\n    let newQuestion = question;\n    newQuestion.answer = value;\n\n    setQuestion(newQuestion);\n  };\n\n  const icon = <CheckBoxOutlineBlank fontSize=\"small\" />;\n  const checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\n\n  /**\n   * Render JSX\n   */\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h1\">Select Question Answer</Typography>\n\n      {question.type === \"MULTIPLE_CHOICE\" ? (\n        <Autocomplete\n          id=\"select-question-multi-choice-answer\"\n          multiple\n          options={question.options}\n          getOptionLabel={(option) => option}\n          style={{ width: 300 }}\n          defaultValue={question.answerArr}\n          disableCloseOnSelect\n          onChange={(event, value) => handleMultiChoiceChange(value || \"\")}\n          renderOption={(option, { selected }) => (\n            <React.Fragment>\n              <Checkbox\n                icon={icon}\n                checkedIcon={checkedIcon}\n                style={{ marginRight: 8 }}\n                checked={selected}\n              />\n              {option}\n            </React.Fragment>\n          )}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Select Question Answer\"\n              variant=\"outlined\"\n            />\n          )}\n        />\n      ) : (\n        <Autocomplete\n          id=\"select-question-text-answer\"\n          defaultValue={question.answer}\n          options={question.options}\n          getOptionLabel={(option) => option}\n          style={{ width: 300 }}\n          onChange={(event, value) => handleTextChange(value || \"\")}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Select Question Answer\"\n              variant=\"outlined\"\n            />\n          )}\n        />\n      )}\n    </div>\n  );\n};\nexport default QuestionAnswer;\n","import {\n  createStyles,\n  makeStyles,\n  Theme,\n  Typography,\n  TextField,\n  Slider,\n} from \"@material-ui/core\";\nimport { useQuestion } from \"./../CreateQuestion\";\n\n/**\n * Injected styles\n *\n * @param {Theme} theme\n */\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: \"2px 4px\",\n      margin: theme.spacing(3),\n    },\n  })\n);\n\n/**\n * QuestionDetails Component\n *\n * Enter additional details about the question\n */\nconst QuestionDetails = () => {\n  const classes = useStyles();\n  const [question, setQuestion] = useQuestion();\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h1\">Enter Question Details</Typography>\n\n      <TextField\n        value={question.answerHint}\n        onChange={(e) =>\n          setQuestion({ ...question, answerHint: e.target.value as string })\n        }\n        helperText={\"A hint to the user after they answer a question incorrect\"}\n      />\n\n      <Typography id=\"points-slider\" gutterBottom>\n        Points\n      </Typography>\n      <Slider\n        defaultValue={25}\n        onChange={(e, value) =>\n          setQuestion({ ...question, points: value as number })\n        }\n        aria-labelledby=\"points-slider\"\n        valueLabelDisplay=\"auto\"\n        step={10}\n        marks\n        min={10}\n        max={100}\n      />\n    </div>\n  );\n};\nexport default QuestionDetails;\n","import {\n  createStyles,\n  FormHelperText,\n  Grow,\n  IconButton,\n  InputBase,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  ListItemText,\n  makeStyles,\n  Paper,\n  Theme,\n  Typography,\n} from \"@material-ui/core\";\nimport { Add, Close, Delete, DragIndicator, Edit } from \"@material-ui/icons\";\nimport { createRef, FormEvent, useCallback, useEffect, useState } from \"react\";\nimport { useQuestion } from \"./../CreateQuestion\";\nimport { IItem, IListItem } from \"./../../../../types/question\";\nimport FixedSizeList from \"./../../../motion/FixedSizeList\";\n\n/**\n * Injected styles\n *\n * @param {Theme} theme\n */\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: \"2px 4px\",\n      margin: theme.spacing(3),\n    },\n    inputContainer: {\n      padding: \"2px 4px\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      margin: \"auto\",\n      alignItems: \"center\",\n      width: \"80%\",\n    },\n    input: {\n      marginLeft: theme.spacing(1),\n      flex: 1,\n    },\n    iconButton: {\n      padding: 10,\n    },\n    divider: {\n      height: 28,\n      margin: 4,\n    },\n    listItem: {\n      cursor: \"move\",\n    },\n  })\n);\n\n/**\n * QuestionOptions Component\n *\n * Allows the user to add options to the question\n */\nconst QuestionOptions = () => {\n  const classes = useStyles();\n\n  const [question, setQuestion] = useQuestion();\n\n  const [activeText, setActiveText] = useState(\"\");\n  const [activeTextError, setActiveTextError] = useState(\"\");\n\n  const [editIndex, setEditIndex] = useState(-1);\n\n  const [items, setItems] = useState<IItem[]>(() => []);\n\n  const inputRef = createRef<HTMLInputElement>();\n\n  /**\n   * Sync the current items within the component with the question context\n   */\n  const syncQuestions = useCallback(() => {\n    let newQuestion = question;\n    newQuestion.options = items.map((item) => {\n      return item.text;\n    });\n    setQuestion(newQuestion);\n  }, [items, question, setQuestion]);\n\n  useEffect(() => {\n    /**\n     * If there are existing options on the question, convert them to items\n     */\n    if (question.options.length > 0 && items.length === 0) {\n      const newItems = question.options.map((item, i) => {\n        return { id: i, text: item };\n      });\n\n      return setItems(newItems);\n    }\n    /**\n     * Check if the items and question.options are equal, if not sync them\n     */\n    if (items.length > 0 && items.length !== question.options.length) {\n      syncQuestions();\n    }\n  }, [question, items, syncQuestions]);\n\n  /**\n   * Validate the text input, and if passes, add the text as an option\n   *\n   * @param {FormEvent} e\n   */\n  const submit = (e: FormEvent) => {\n    e.preventDefault();\n    if (activeText.length < 1)\n      return setActiveTextError(\"Text must be at least one character\");\n\n    if (editIndex !== -1) {\n      const itemI = items.findIndex((item) => item.id === editIndex);\n\n      setItems((old) => {\n        old[itemI].text = activeText;\n        return [...old];\n      });\n      setEditIndex(-1);\n    } else {\n      const newItem = {\n        id: items.length + 1,\n        text: activeText,\n      };\n      setItems((old) => [...old, newItem]);\n    }\n\n    setActiveText(\"\");\n    setActiveTextError(\"\");\n  };\n\n  /**\n   * Edit a option\n   *\n   * @param {number} id\n   */\n  const editItem = (id: number) => {\n    const itemI = items.findIndex((item) => item.id === id);\n    setEditIndex(id);\n\n    setActiveText(items[itemI].text);\n    if (inputRef && inputRef.current) inputRef.current.focus();\n  };\n\n  /**\n   * Remove an option\n   *\n   * @param {number} id\n   */\n  const removeItem = (id: number) => {\n    const itemI = items.findIndex((item) => item.id === id);\n    const newItems = items;\n    console.log(\"removing one\", newItems[itemI]);\n\n    newItems.splice(itemI, 1);\n    console.log(\"done\", newItems[itemI]);\n\n    setItems([...newItems]);\n  };\n\n  /**\n   * Renders a single list item\n   *\n   * @param {IListItem} - {id, text} - the id and text of the item\n   * @returns\n   */\n  const Item = ({ id, text }: IListItem) => {\n    return (\n      <ListItem className={classes.listItem}>\n        <ListItemIcon>\n          <DragIndicator />\n        </ListItemIcon>\n        <Grow in={true}>\n          <ListItemText>{text}</ListItemText>\n        </Grow>\n        <ListItemIcon>\n          <IconButton onClick={() => editItem(id)}>\n            <Edit />\n          </IconButton>\n        </ListItemIcon>\n        <ListItemSecondaryAction onClick={() => removeItem(id)}>\n          <IconButton edge=\"end\" aria-label=\"comments\">\n            <Delete />\n          </IconButton>\n        </ListItemSecondaryAction>\n      </ListItem>\n    );\n  };\n\n  /**\n   * Render JSX\n   */\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h1\">Add Options</Typography>\n\n      <Paper className={classes.inputContainer}>\n        <InputBase\n          className={classes.input}\n          placeholder=\"Add a new option\"\n          inputProps={{ \"aria-label\": \"Add option\" }}\n          autoFocus={true}\n          inputRef={inputRef}\n          value={activeText}\n          onChange={(e) => setActiveText(e.target.value)}\n          onKeyDown={(e) => e.key === \"Enter\" && submit(e)}\n          error={activeTextError !== \"\"}\n        />\n        <Grow in={editIndex !== -1}>\n          <IconButton\n            className={classes.iconButton}\n            aria-label=\"Cancel edit\"\n            onClick={() => {\n              setEditIndex(-1);\n              setActiveText(\"\");\n            }}\n          >\n            <Close />\n          </IconButton>\n        </Grow>\n        <IconButton\n          className={classes.iconButton}\n          aria-label={editIndex !== -1 ? \"Edit\" : \"Create\"}\n          onClick={submit}\n        >\n          {editIndex !== -1 ? <Edit /> : <Add />}\n        </IconButton>\n      </Paper>\n      <FormHelperText error>{activeTextError}</FormHelperText>\n\n      <List>\n        <FixedSizeList items={items} setItems={setItems} listItem={Item} />\n      </List>\n    </div>\n  );\n};\n\nexport default QuestionOptions;\n","import { useMutation } from \"@apollo/client\";\nimport {\n  createStyles,\n  makeStyles,\n  Theme,\n  Typography,\n  Button,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport { Check } from \"@material-ui/icons\";\nimport { useState } from \"react\";\nimport { useQuestion } from \"./../CreateQuestion\";\nimport { CREATE, UPDATE } from \"./../../../../gql/question\";\nimport PreviewQuestion from \"./../../PreviewQuestion\";\nimport { IHistoryProps } from \"../../../../types/router\";\n\n/**\n * Injected styles\n *\n * @param {Theme} theme\n */\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: \"2px 4px\",\n      margin: theme.spacing(3),\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n    },\n  })\n);\n\n/**\n * Component types\n */\ninterface IProps extends IHistoryProps {\n  handleReset: () => void;\n}\n\n/**\n * QuestionReview Component\n *\n * Review the current question after all steps are completed\n */\nconst QuestionReview = ({ handleReset, history }: IProps) => {\n  const classes = useStyles();\n  const [question] = useQuestion();\n  const [serverError, setServerError] = useState(\"\");\n\n  const [loading, setLoading] = useState(false);\n  const [addQuestion] = useMutation(CREATE);\n  const [updateQuestion] = useMutation(UPDATE);\n\n  /**\n   * Capitalizes a string\n   *\n   * @param {string} str\n   * @returns {string} - the string but capitalized\n   */\n  const capitalize = (str: string) => {\n    return str\n      .split(\" \")\n      .map((item) => item.charAt(0).toUpperCase() + item.slice(1))\n      .join(\" \");\n  };\n\n  /**\n   * Either create or update a question in on the server depending on\n   * if the question has a question.id or not\n   */\n  const save = () => {\n    setServerError(\"\");\n    setLoading(true);\n    const newQuestion = {\n      requiresPiano: question.requiresPiano,\n      text: question.text,\n      image: question.image,\n      options: question.options,\n      type: capitalize(question.type.replace(\"_\", \" \").toLocaleLowerCase()),\n      points: question.points,\n      answer: question.answer,\n      answerArr: question.answerArr,\n      answerHint: question.answerHint,\n    };\n\n    if (question.id) {\n      updateQuestion({\n        variables: {\n          id: question.id,\n          input: newQuestion,\n        },\n      })\n        .then((res: any) => {\n          setLoading(false);\n          history.push(`/lesson/${res.data.updateQuestion.lesson.id}/true`);\n        })\n        .catch((e) => {\n          setLoading(false);\n          setServerError(e.toString());\n        });\n    } else {\n      addQuestion({\n        variables: {\n          lessonId: question.lessonId,\n          input: newQuestion,\n        },\n      })\n        .then((res: any) => {\n          setLoading(false);\n          history.push(`/lesson/${res.data.addQuestion.lesson.id}/true`);\n        })\n        .catch((e) => {\n          setLoading(false);\n          setServerError(e.toString());\n        });\n    }\n  };\n\n  /**\n   * Render JSX\n   */\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h1\">All Steps Complete</Typography>\n      <br />\n      <Typography>This is your new question will look like:</Typography>\n\n      <PreviewQuestion question={question} />\n\n      <Button onClick={handleReset}>Go back</Button>\n      <Button\n        variant=\"contained\"\n        onClick={save}\n        disabled={loading}\n        color=\"primary\"\n        endIcon={loading ? <CircularProgress size={18} /> : <Check />}\n      >\n        Save\n      </Button>\n\n      <br />\n\n      <Typography variant=\"caption\" color=\"error\">\n        {serverError}\n      </Typography>\n    </div>\n  );\n};\nexport default QuestionReview;\n","import React from \"react\";\n\nimport {\n  Button,\n  Card,\n  createStyles,\n  makeStyles,\n  Step,\n  StepButton,\n  Stepper,\n  Theme,\n  Typography,\n} from \"@material-ui/core\";\nimport { Error as ErrorIcon } from \"@material-ui/icons\";\n\nimport { IHistoryProps } from \"../../../types/router\";\n\nimport QuestionText from \"./steps/QuestionText\";\nimport QuestionImage from \"./steps/QuestionImage\";\nimport QuestionType from \"./steps/QuestionType\";\nimport QuestionAnswer from \"./steps/QuestionAnswer\";\nimport QuestionDetails from \"./steps/QuestionDetails\";\nimport QuestionOptions from \"./steps/QuestionOptions\";\nimport { useQuestion } from \"./CreateQuestion\";\nimport QuestionReview from \"./steps/QuestionReview\";\n\n/**\n * Steps fed into the Stepper\n * @param {string} title - The title for the stepper\n * @param {string | array} name - The name of the field / fields to be validated on the question context\n * @param {JSX.Element} component - The component to be rendered\n * @param {boolean} required  - Whether the validator should run on this component\n */\nconst steps = [\n  {\n    title: \"Add Question Text\",\n    name: \"text\",\n    component: <QuestionText />,\n    required: true,\n  },\n  {\n    title: \"Add Image\",\n    name: \"image\",\n    component: <QuestionImage />,\n    required: false,\n  },\n  {\n    title: \"Select Type\",\n    name: \"type\",\n    component: <QuestionType />,\n    required: true,\n  },\n  {\n    title: \"Add Options\",\n    name: \"options\",\n    component: <QuestionOptions />,\n    required: true,\n  },\n  {\n    title: \"Select Answer\",\n    name: [\"answerArr\", \"answer\"],\n    component: <QuestionAnswer />,\n    required: true,\n  },\n  {\n    title: \"Question Details\",\n    name: [\"points\", \"answerHint\"],\n    component: <QuestionDetails />,\n    required: true,\n  },\n];\n\n/**\n * Injected styles\n *\n * @param {Theme} theme\n */\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n      position: \"relative\",\n    },\n    contentWrapper: {\n      margin: `${theme.spacing(2)}px auto`,\n    },\n    buttonContainer: {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      padding: theme.spacing(3),\n    },\n    button: {\n      marginRight: theme.spacing(1),\n    },\n    backButton: {\n      marginRight: theme.spacing(1),\n    },\n    completed: {\n      display: \"inline-block\",\n    },\n    instructions: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n  })\n);\n\n/**\n * Get the number of steps\n *\n * @returns {number}\n */\nfunction getSteps() {\n  return steps.map((step) => step.title);\n}\n\n/**\n * QuestionStepper Component\n *\n * @param {History} history - the browser history object\n */\nconst QuestionStepper = ({ history }: IHistoryProps) => {\n  const classes = useStyles();\n\n  const [question] = useQuestion();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [completed, setCompleted] = React.useState(new Set<number>());\n  const [errors, setErrors] = React.useState(new Set<number>());\n  const [skipped, setSkipped] = React.useState(new Set<number>());\n  const questionSteps = steps;\n\n  /**\n   * Get the number of steps\n   *\n   * @returns {number}\n   */\n  const totalSteps = () => {\n    return getSteps().length;\n  };\n\n  /**\n   * Get the content of the step\n   *\n   * @param {number} step\n   * @returns {JSX.Element}\n   */\n  const getStepContent = (step: number) => {\n    return questionSteps[step].component;\n  };\n\n  /**\n   * Check whether the step is optional or not\n   *\n   * @param {number} step\n   * @returns {bool}\n   */\n  const isStepOptional = (step: number) => {\n    return questionSteps[step].required !== true;\n  };\n\n  /**\n   * Check if a step is optional and if so skip the element\n   */\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped((prevSkipped) => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  /**\n   * Get the number of skipped steps\n   *\n   * @returns {number}\n   */\n  const skippedSteps = () => {\n    return skipped.size;\n  };\n\n  /**\n   * Get the number of completed steps\n   *\n   * @returns {number}\n   */\n  const completedSteps = () => {\n    return completed.size;\n  };\n\n  /**\n   * Check if all steps are completed\n   *\n   * @returns {bool}\n   */\n  const allStepsCompleted = () => {\n    return completedSteps() === totalSteps() - skippedSteps();\n  };\n\n  /**\n   * Check if it is the last step\n   *\n   * @returns {bool}\n   */\n  const isLastStep = () => {\n    return activeStep === totalSteps() - 1;\n  };\n\n  /**\n   * Go to the next step\n   *\n   * @returns {void}\n   */\n  const handleNext = () => {\n    const newActiveStep =\n      isLastStep() && !allStepsCompleted()\n        ? // It's the last step, but not all steps have been completed\n          // find the first step that has been completed\n          steps.findIndex((step, i) => !completed.has(i))\n        : activeStep + 1;\n\n    setActiveStep(newActiveStep);\n  };\n\n  /**\n   * Go to the previous step\n   *\n   * @returns {void}\n   */\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  /**\n   * Step to the next step\n   *\n   * @returns {void}\n   */\n  const handleStep = (step: number) => () => {\n    setActiveStep(step);\n  };\n\n  /**\n   * Validate a step and if it passes, go to the next step\n   *\n   * @returns {void}\n   */\n  const handleComplete = () => {\n    const newCompleted = new Set(completed);\n    const newErrors = new Set(errors);\n    setErrors(new Set());\n    /**\n     * Check if the step is required\n     */\n    if (steps[activeStep].required) {\n      /**\n       * Check if the step name is not a string\n       */\n      if (typeof steps[activeStep].name !== \"string\") {\n        const names = steps[activeStep].name as string[];\n        /**\n         * Loop through and check that all fields pass validation\n         */\n        if (\n          names.every((name) => {\n            return question[name as string].length < 1;\n          })\n        ) {\n          newErrors.add(activeStep);\n          return setErrors(newErrors);\n        }\n      } else {\n        const name = steps[activeStep].name;\n        /**\n         * Set the error and fail the validation\n         */\n        if (question[name as string].length < 1) {\n          console.log(\"thats gotta be an error\");\n          newErrors.add(activeStep);\n          return setErrors(newErrors);\n        }\n      }\n    }\n    /**\n     * Pass validation and complete the step\n     */\n    newCompleted.add(activeStep);\n    setCompleted(newCompleted);\n\n    /**\n     * Sigh... it would be much nicer to replace the following if conditional with\n     * `if (!this.allStepsComplete())` however state is not set when we do this,\n     * thus we have to resort to not being very DRY.\n     */\n    if (completed.size !== totalSteps() - skippedSteps()) {\n      handleNext();\n    }\n  };\n\n  /**\n   * Reset the steps and go back to step 1\n   */\n  const handleReset = () => {\n    setActiveStep(0);\n    setCompleted(new Set<number>());\n    setSkipped(new Set<number>());\n  };\n\n  /**\n   * Check if a step has been skipped\n   */\n  const isStepSkipped = (step: number) => {\n    return skipped.has(step);\n  };\n  /**\n   * Check if a step is completed\n   */\n  function isStepComplete(step: number) {\n    return completed.has(step);\n  }\n  /**\n   * Check if a step contains an error\n   */\n  function isStepError(step: number) {\n    return errors.has(step);\n  }\n  /**\n   * Render JSX\n   */\n  return (\n    <div className={classes.root}>\n      <Stepper alternativeLabel nonLinear activeStep={activeStep}>\n        {questionSteps.map((step, index) => {\n          const stepProps: { completed?: boolean } = {};\n          const buttonProps: { optional?: React.ReactNode } = {};\n          if (isStepOptional(index)) {\n            buttonProps.optional = (\n              <Typography variant=\"caption\">Optional</Typography>\n            );\n          }\n          if (isStepSkipped(index)) {\n            stepProps.completed = false;\n          }\n          return (\n            <Step key={step.title} {...stepProps}>\n              {isStepError(index) ? (\n                <StepButton\n                  onClick={handleStep(index)}\n                  completed={isStepComplete(index)}\n                  icon={<ErrorIcon />}\n                  style={{ color: \"red\" }}\n                  {...buttonProps}\n                >\n                  {step.title}\n                </StepButton>\n              ) : (\n                <StepButton\n                  onClick={handleStep(index)}\n                  completed={isStepComplete(index)}\n                  {...buttonProps}\n                >\n                  {step.title}\n                </StepButton>\n              )}\n            </Step>\n          );\n        })}\n      </Stepper>\n      <div>\n        {allStepsCompleted() ? (\n          <QuestionReview history={history} handleReset={handleReset} />\n        ) : (\n          <React.Fragment>\n            <div className={classes.contentWrapper}>\n              {getStepContent(activeStep)}\n            </div>\n            <Card className={classes.buttonContainer}>\n              <Button\n                disabled={activeStep === 0}\n                onClick={handleBack}\n                className={classes.button}\n              >\n                Back\n              </Button>\n\n              {isStepOptional(activeStep) && !completed.has(activeStep) && (\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleSkip}\n                  className={classes.button}\n                >\n                  Skip\n                </Button>\n              )}\n              {activeStep !== steps.length &&\n                (completed.has(activeStep) ? (\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleNext}\n                    className={classes.button}\n                  >\n                    Next\n                  </Button>\n                ) : (\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleComplete}\n                  >\n                    {completedSteps() === totalSteps() - 1 ? \"Finish\" : \"Next\"}\n                  </Button>\n                ))}\n            </Card>\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default QuestionStepper;\n","import { useQuery } from \"@apollo/client\";\nimport React, { createContext, useContext, useEffect } from \"react\";\nimport { IHistoryProps } from \"../../../types/router\";\nimport { LIST_QUESTION_TYPE } from \"./../../../gql/question\";\n\nimport { QuestionValidator } from \"./../../../types/question\";\nimport QuestionStepper from \"./QuestionStepper\";\n\n/**\n * Initial Question Context\n */\nconst initialQuestion = {\n  lessonId: \"\",\n  requiresPiano: false,\n  text: [],\n  image: \"\",\n  options: [],\n  type: \"\",\n  points: 0,\n  answer: \"\",\n  answerArr: [],\n  answerHint: \"\",\n  questionTypeOptions: [],\n};\n\n/**\n * Declaring the Question Context\n */\nexport const QuestionContext = createContext<\n  [QuestionValidator, (setQuestion: QuestionValidator) => void]\n>([initialQuestion, (_) => null]);\n\n/**\n * Component Types\n */\ninterface IProps extends IHistoryProps {\n  match: any;\n  update?: QuestionValidator | null;\n}\n\n/**\n * CreateQuestion Component\n *\n * @param {History} history - the browser history object\n * @param {any} match - parameters being passed from the parent\n * @param {QuestionValidator | null} update - Whether the function is to update an existing question\n *  or create a new one\n */\nconst CreateQuestion = ({ history, match, update = null }: IProps) => {\n  const [question, setQuestion] = React.useState(initialQuestion);\n  const { loading, error, data } = useQuery(LIST_QUESTION_TYPE);\n\n  useEffect(() => {\n    /**\n     * Get question type options from the server\n     */\n    if (!loading && !error && data && question.questionTypeOptions.length < 1) {\n      let newQuestion: any = {\n        ...question,\n        questionTypeOptions: data.getQuestionTypes,\n        lessonId: update ? update.lesson.id : match.params.id,\n      };\n      /**\n       * If an existing question exists, add it to the question context\n       */\n      if (update) {\n        newQuestion = {\n          ...newQuestion,\n          id: update.id,\n          requiresPiano: update.requiresPiano || false,\n          image: update.image,\n          options: update.options,\n          type: update.type,\n          points: update.points,\n          answer: update.answer,\n          answerArr: update.answerArr,\n          answerHint: update.answerHint,\n        };\n        const items = [...update.text].sort(\n          (a: any, b: any) => a.order - b.order\n        );\n\n        newQuestion.text = items;\n      }\n\n      setQuestion(newQuestion);\n    }\n  }, [question, data, error, loading, match.params.id, update]);\n\n  /**\n   * Render JSX and define the QuestionContext\n   */\n  return (\n    <QuestionContext.Provider value={[question, setQuestion as any]}>\n      <QuestionStepper history={history} />\n    </QuestionContext.Provider>\n  );\n};\n\nexport const useQuestion = () => useContext(QuestionContext);\nexport default CreateQuestion;\n","import React from \"react\";\nimport { Button, createStyles, withStyles } from \"@material-ui/core\";\n\nimport { ArrowBack } from \"@material-ui/icons\";\n\nimport { Link } from \"react-router-dom\";\nimport CreateQuestion from \"./../../components/question/createQuestion/CreateQuestion\";\nimport { RouteComponentProps } from \"react-router-dom\";\n\n/**\n * Component types\n */\ninterface IProps extends RouteComponentProps {\n  match: any;\n  classes: any;\n}\n\n/**\n * Injected styles\n *\n * @param {int} spacing\n */\nconst styles = ({ spacing }: any) =>\n  createStyles({\n    wrapper: {\n      padding: spacing(4),\n    },\n  });\n/**\n * CreateQuestion Component\n *\n * @param {History} history - the browser history object\n * @param {Theme} classes - classes passed from Material UI Theme\n */\nconst Create = ({ history, match }: IProps) => {\n  /**\n   * Render JSX\n   */\n  return (\n    <React.Fragment>\n      <Button\n        component={Link}\n        to={`/lesson/${match.params.id}`}\n        startIcon={<ArrowBack />}\n      >\n        Back\n      </Button>\n\n      <CreateQuestion history={history} match={match} />\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(Create);\n","import React from \"react\";\nimport { Button, createStyles, withStyles } from \"@material-ui/core\";\n\nimport { ArrowBack } from \"@material-ui/icons\";\n\nimport { Link } from \"react-router-dom\";\n\nimport CreateQuestion from \"./../../components/question/createQuestion/CreateQuestion\";\nimport EmptyState from \"./../../components/global/EmptyState\";\nimport Loading from \"./../../components/global/Loading\";\nimport { useQuery } from \"@apollo/client\";\nimport { READ } from \"./../../gql/question\";\nimport { RouteComponentProps } from \"react-router-dom\";\n\n/**\n * Component types\n */\ninterface IProps extends RouteComponentProps {\n  match: any;\n  classes: any;\n}\n\n/**\n * Injected styles\n *\n * @param {int} spacing\n */\nconst styles = ({ spacing }: any) =>\n  createStyles({\n    wrapper: {\n      padding: spacing(4),\n    },\n  });\n\n/**\n * UpdateQuestion Component\n *\n * @param {History} history - the browser history object\n * @param {any} match - classes passed from Material UI Theme\n */\nconst Update = ({ history, match }: IProps) => {\n  const { id } = match.params;\n  /**\n   * Destructered variables from the graphql query\n   */\n  const { loading, error, data } = useQuery(READ, { variables: { id } });\n\n  /**\n   * Render JSX\n   */\n  if (loading) return <Loading />;\n  if (error || !data.getQuestion)\n    return (\n      <EmptyState message={error ? error.message : \"Could not load Question\"} />\n    );\n  return (\n    <React.Fragment>\n      <Button\n        component={Link}\n        to={`/question/${match.params.id}`}\n        startIcon={<ArrowBack />}\n      >\n        Back\n      </Button>\n\n      <CreateQuestion\n        history={history}\n        match={match}\n        update={data.getQuestion}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(Update);\n","import React from \"react\";\n\nimport { Button } from \"@material-ui/core\";\nimport { ArrowBack } from \"@material-ui/icons\";\n\nimport { Link, withRouter } from \"react-router-dom\";\n\nimport Loading from \"./../../components/global/Loading\";\nimport EmptyState from \"./../../components/global/EmptyState\";\nimport QuestionItem from \"./../../components/question/QuestionItem\";\nimport { useQuery } from \"@apollo/client\";\nimport { READ } from \"./../../gql/question\";\nimport { RouteComponentProps } from \"react-router-dom\";\n\ninterface IProps extends RouteComponentProps {\n  match: any;\n}\n\n/**\n * Read Question Component\n *\n * @param {Match} match - Contains information about a react-router-dom Route\n * @param {History} history - the browser history object\n */\nconst Read = ({ history, match }: IProps) => {\n  const { id } = match.params;\n  /**\n   * Destructered variables from the graphql query\n   */\n  const { loading, error, data } = useQuery(READ, { variables: { id } });\n\n  /**\n   * Render JSX\n   */\n  if (loading) return <Loading />;\n  if (error || !data.getQuestion)\n    return (\n      <EmptyState message={error ? error.message : \"Could not load Question\"} />\n    );\n  return (\n    <React.Fragment>\n      <Button\n        component={Link}\n        to={`/lesson/${data.getQuestion.lesson.id}`}\n        startIcon={<ArrowBack />}\n      >\n        Back\n      </Button>\n      <div style={{ position: \"relative\" }}>\n        <QuestionItem\n          question={data.getQuestion}\n          history={history}\n          displayActions={true}\n          disableHeight={false}\n        />\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default withRouter(Read);\n","import { createStyles, Fab, Theme, withStyles } from \"@material-ui/core\";\nimport { Link, RouteComponentProps } from \"react-router-dom\";\nimport React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport Loading from \"./../../components/global/Loading\";\nimport EmptyState from \"./../../components/global/EmptyState\";\nimport QuestionItem from \"./../../components/question/QuestionItem\";\nimport { Add } from \"@material-ui/icons\";\nimport { LIST } from \"../../gql/question\";\n\n/**\n * Injected styles\n *\n * @param {int} spacing\n */\nconst styles = ({ spacing }: Theme) =>\n  createStyles({\n    root: {\n      maxWidth: \"800px\",\n      margin: \"0 auto\",\n      height: \"500px\",\n      display: \"flex\",\n      textAlign: \"center\",\n      alignItems: \"center\",\n      flexDirection: \"column\",\n      justifyContent: \"space-evenly\",\n    },\n    actions: {\n      justifyContent: \"center\",\n    },\n    fab: {\n      position: \"fixed\",\n      bottom: spacing(2),\n      right: spacing(2),\n    },\n  });\n\n/**\n * Component types\n */\ninterface IProps extends RouteComponentProps {\n  classes: {\n    root: string;\n    actions: string;\n    fab: string;\n  };\n  match: any;\n}\n\n/**\n * CreateModule Component\n *\n * @param {Theme} classes - Injected css styles\n * @param {any} match - The parameters passed in the URL bar\n * @param {History} history - the browser history object\n */\nconst List = ({ classes, match, history }: IProps) => {\n  /**\n   * Destructered variables from the graphql query\n   */\n  const { loading, error, data, refetch } = useQuery(LIST);\n  /**\n   * GraphQL often caches queries, but after running some\n   * create or update functions a manual refetch is required\n   *\n   * We pass this in the URL bar as an optional refetch boolean\n   */\n  let { newFetch } = match.params;\n  /**\n   * If it exists, we run the refetch function and redirect to the same page\n   */\n  if (newFetch) {\n    refetch();\n    history.push(`/questions`);\n  }\n  /**\n   * Render JSX\n   */\n  if (loading) return <Loading />;\n  if (error) return <EmptyState message={error.message} />;\n  return (\n    <React.Fragment>\n      {data.getQuestions.length < 1 ? (\n        <EmptyState message=\"No Questions Found\" />\n      ) : (\n        data.getQuestions.map((question: { id: any }) => (\n          <QuestionItem\n            history={history}\n            key={question.id}\n            displayActions={false}\n            question={question}\n            link={`/question/${question.id}`}\n          />\n        ))\n      )}\n      <Fab\n        className={classes.fab}\n        component={Link}\n        aria-label=\"Add Question\"\n        color=\"secondary\"\n        to=\"/create/question\"\n      >\n        <Add />\n      </Fab>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(List);\n","import { gql } from \"@apollo/client\";\n\n/**\n * Login to the system\n */\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    adminLogin(input: { email: $email, password: $password }) {\n      token\n      expiration\n      user {\n        email\n        id\n      }\n    }\n  }\n`;\n","import {\n  Create as CreateModule,\n  Read as ReadModule,\n  Update as UpdateModule,\n  List as ListModule,\n} from \"./../pages/module\";\n\nimport {\n  Create as CreateLesson,\n  Read as ReadLesson,\n  List as ListLesson,\n} from \"./../pages/lesson\";\n\nimport {\n  Create as CreateQuestion,\n  Read as ReadQuestion,\n  Update as UpdateQuestion,\n  List as ListQuestion,\n} from \"./../pages/question\";\n\nimport Login from \"./../pages/auth/Login\";\n\n/**\n * Route Types\n */\nexport type IRouteType = {\n  name: string;\n  link: string;\n  component: any;\n  authed: boolean;\n};\n\n/**\n * Defines all routes for the application\n *\n * @param {string} name - The name of the route\n * @param {string} link - The link to he route\n * @param {JSX.Element} component - The component to be rendered\n * @param {bool} authed - Whether the user needs to be authenticated to view this route\n */\nconst routes: IRouteType[] = [\n  /**\n   * Auth\n   */\n  {\n    name: \"Login\",\n    link: \"/login\",\n    component: Login,\n    authed: false,\n  },\n\n  /**\n   * Modules\n   */\n  {\n    name: \"Create Module\",\n    link: \"/create/module\",\n    component: CreateModule,\n    authed: true,\n  },\n  {\n    name: \"Module\",\n    link: \"/module/:id/:newFetch?\",\n    component: ReadModule,\n    authed: true,\n  },\n\n  {\n    name: \"Update Module\",\n    link: \"/update/module/:id\",\n    component: UpdateModule,\n    authed: true,\n  },\n  {\n    name: \"Modules\",\n    link: \"/modules/:newFetch?\",\n    component: ListModule,\n    authed: true,\n  },\n  /**\n   * Lessons\n   */\n  {\n    name: \"Create Lesson\",\n    link: \"/create/lesson\",\n    component: CreateLesson,\n    authed: true,\n  },\n  {\n    name: \"Lesson\",\n    link: \"/lesson/:id/:newFetch?\",\n    component: ReadLesson,\n    authed: true,\n  },\n  {\n    name: \"Lessons\",\n    link: \"/lessons/:newFetch?\",\n    component: ListLesson,\n    authed: true,\n  },\n  /**\n   * Questions\n   */\n  {\n    name: \"Create Question\",\n    link: \"/create/question/:id\",\n    component: CreateQuestion,\n    authed: true,\n  },\n  {\n    name: \"Question\",\n    link: \"/question/:id\",\n    component: ReadQuestion,\n    authed: true,\n  },\n\n  {\n    name: \"Update Question\",\n    link: \"/update/question/:lessonId/:id\",\n    component: UpdateQuestion,\n    authed: true,\n  },\n  {\n    name: \"Questions\",\n    link: \"/questions/:newFetch?\",\n    component: ListQuestion,\n    authed: true,\n  },\n];\n\nexport default routes;\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  Card,\n  TextField,\n  CardHeader,\n  CardContent,\n  createStyles,\n  withStyles,\n  CardActions,\n  CircularProgress,\n  Typography,\n} from \"@material-ui/core\";\n\nimport { ArrowBack, Check } from \"@material-ui/icons\";\n\nimport { Link } from \"react-router-dom\";\n\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN } from \"./../../gql/auth\";\nimport auth from \"./../../helpers/auth-helper\";\nimport { RouteComponentProps } from \"react-router-dom\";\n\n/**\n * Component types\n */\ninterface IProps extends RouteComponentProps {\n  match: any;\n  classes: any;\n}\n\n/**\n * Injected styles\n *\n * @param {int} spacing\n */\nconst styles = ({ spacing }: any) =>\n  createStyles({\n    wrapper: {\n      padding: spacing(4),\n    },\n  });\n\n/**\n * LoginModule Component\n *\n * @param {History} history - the browser history object\n * @param {Theme} classes - classes passed from Material UI Theme\n */\nconst Login = ({ history, classes }: IProps) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const [emailError, setEmailError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n\n  const [loading, setLoading] = React.useState(false);\n  const [error, setError] = React.useState(\"\");\n\n  const [login] = useMutation(LOGIN);\n\n  /**\n   * Handle validation for form inputs\n   */\n  const handleValidation = () => {\n    let passed = true;\n\n    if (email.length < 3) {\n      setEmailError(\"Email must be at least 3 characters\");\n      passed = false;\n    } else if (!email.includes(\"@\") || !email.includes(\".\")) {\n      setEmailError(\"Please enter a valid email\");\n      passed = false;\n    } else setEmailError(\"\");\n\n    if (password.length < 6) {\n      setPasswordError(\"Password must be at least 6 characters\");\n      passed = false;\n    } else setPasswordError(\"\");\n\n    return passed;\n  };\n\n  /**\n   * Validate the inputted info, and if it passes run the login mutation\n   */\n  const submit = () => {\n    if (handleValidation()) {\n      setError(\"\");\n      setLoading(true);\n      login({\n        variables: {\n          email,\n          password,\n        },\n      })\n        .then((res: any) => {\n          setError(\"\");\n          auth.setUserDetails(res.data.adminLogin, (success) => {\n            if (success) {\n              return history.push(\"/modules\");\n            }\n            setError(\"The system encountered an error, please try again later\");\n          });\n        })\n        .catch((e: any) => {\n          setLoading(false);\n\n          setError(e.toString());\n        });\n    }\n  };\n\n  /**\n   * Render JSX\n   */\n  return (\n    <React.Fragment>\n      <Button component={Link} to=\"/\" startIcon={<ArrowBack />}>\n        Back\n      </Button>\n      <Card elevation={3} className={classes.wrapper}>\n        <CardHeader title=\"Login\" />\n\n        <CardContent>\n          <TextField\n            name=\"email\"\n            label=\"Email\"\n            autoFocus={true}\n            margin=\"normal\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            onKeyDown={(e) => e.key === \"Enter\" && submit()}\n            error={emailError !== \"\"}\n            helperText={emailError}\n          />\n\n          <TextField\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            margin=\"normal\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            onKeyDown={(e) => e.key === \"Enter\" && submit()}\n            error={passwordError !== \"\"}\n            helperText={passwordError}\n          />\n\n          <br />\n\n          <Typography variant=\"caption\" color=\"error\">\n            {error}\n          </Typography>\n        </CardContent>\n        <CardActions>\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            onClick={submit}\n            disabled={loading}\n            endIcon={loading ? <CircularProgress size={18} /> : <Check />}\n          >\n            Login\n          </Button>\n        </CardActions>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(Login);\n","import React, { Suspense, useEffect } from \"react\";\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport { Grid } from \"@material-ui/core\";\n\nimport Home from \"./../pages/Home\";\nimport Header from \"./../components/layout/Header\";\nimport EmptyState from \"./../components/global/EmptyState\";\n\nimport routes, { IRouteType } from \"./routes\";\nimport auth from \"./../helpers/auth-helper\";\nimport Loading from \"../components/global/Loading\";\n\n/**\n * Handles Routing for the application\n *\n * @returns {JSX.Element}\n */\nconst MainRouter = () => {\n  /**\n   * If set to true, displays routes that only authenticated users should see\n   * If not, displays login / register\n   */\n  const [isAuthed, setIsAuthed] = React.useState(false);\n  const history = useHistory();\n  /**\n   * Check if the user is authenticaed\n   */\n  useEffect(() => {\n    const setAuth = (bool: boolean) => setIsAuthed(bool);\n\n    const jwt = auth.isAuthenticated();\n    setAuth(jwt ? true : false);\n\n    /**\n     * Listen for changes in the URL bar,\n     * and check if the user is authenticated\n     *\n     * Can only be done when the component\n     * is exported through withRouter\n     */\n    history.listen(() => {\n      const jwt = auth.isAuthenticated();\n      setAuth(jwt ? true : false);\n    });\n  }, [history]);\n\n  return (\n    <React.Fragment>\n      <Header isAuthed={isAuthed} setIsAuthed={setIsAuthed} history={history} />\n      <Grid\n        container\n        justify=\"center\"\n        style={{ marginTop: \"20px\", marginBottom: \"20px\" }}\n      >\n        <Grid item xs={11}>\n          <Suspense fallback={<Loading />}>\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n\n              {routes.map(({ link, component, authed }: IRouteType, i) => {\n                if (authed && !isAuthed)\n                  return (\n                    <Route\n                      key={i}\n                      render={() => (\n                        <EmptyState\n                          message=\"You need to be logged in to view this page\"\n                          action={() => history.push(\"/login\")}\n                          actionLabel={\"Login\"}\n                        />\n                      )}\n                    />\n                  );\n\n                return <Route path={link} component={component} key={i} />;\n              })}\n\n              <Route\n                render={() => (\n                  <EmptyState message=\"The page you are looking for does not exist\" />\n                )}\n              />\n            </Switch>\n          </Suspense>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default MainRouter;\n","/**\n * File: theme.js\n * Project: ca2-client\n * Version 0.1.0\n * File Created: Tuesday, 5th January 2021 1:46:00 pm\n * Author: Eoan O'Dea (eoan@web-space.design)\n * -----\n * File Description:\n * Last Modified: Sunday, 7th February 2021 1:49:32 pm\n * Modified By: Eoan O'Dea (eoan@web-space.design>)\n * -----\n * Copyright 2021 WebSpace, WebSpace\n */\n\nimport { createMuiTheme, responsiveFontSizes } from \"@material-ui/core/styles\";\n\nlet theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#ff9100\",\n    },\n    secondary: {\n      main: \"#42a5f5\",\n    },\n  },\n  typography: {\n    fontFamily: [\"quicksand\", \"sans-serif\"].join(\",\"),\n\n    h1: {\n      fontWeight: 800,\n      fontSize: \"3.052rem\",\n      margin: \"3rem 0 1.38rem\",\n      color: \"#4e4e4e\",\n    },\n    h2: {\n      fontWeight: 700,\n      fontSize: \"2.441rem\",\n      margin: \"3rem 0 1.38rem\",\n      color: \"#4e4e4e\",\n    },\n    h3: {\n      fontWeight: 700,\n      fontSize: \"1.953rem\",\n      margin: \"3rem 0 1.38rem\",\n      color: \"#4e4e4e\",\n    },\n    h4: {\n      fontWeight: 700,\n      fontSize: \"1.563rem\",\n      margin: \"3rem 0 1.38rem\",\n      color: \"#4e4e4e\",\n    },\n    h5: {\n      fontWeight: 700,\n      fontSize: \"1.25rem\",\n      color: \"#4e4e4e\",\n    },\n  },\n  overrides: {\n    MuiTextField: {\n      root: {\n        width: \"100%\",\n        margin: \"16px auto\",\n      },\n    },\n    MuiListItemText: {\n      root: {\n        display: \"flex\",\n        flexDirection: \"column-reverse\",\n      },\n    },\n  },\n});\n\ntheme = responsiveFontSizes(theme);\n\nexport default theme;\n","import { BrowserRouter as Router } from \"react-router-dom\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\n\nimport MainRouter from \"./routing/MainRouter\";\nimport theme from \"./theme\";\n\n/**\n * Entry point for the application\n *\n * @returns {JSX.Element}\n */\nconst App = () => {\n  return (\n    <Router>\n      <MuiThemeProvider theme={theme}>\n        <MainRouter />\n      </MuiThemeProvider>\n    </Router>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\n\nimport App from \"./App\";\n\nimport { ApolloProvider } from \"@apollo/client\";\nimport { ApolloClient, InMemoryCache } from \"@apollo/client\";\nimport { config } from \"./config/config\";\n\n/**\n * Create a new Apollo Client instance\n *\n * Configure CORS options and use the InMemoryCache\n */\nconst client = new ApolloClient({\n  uri: config.server_url + \"/graphql\",\n  credentials: \"include\",\n  cache: new InMemoryCache(),\n});\n\n/**\n * Render the application to the DOM\n */\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}